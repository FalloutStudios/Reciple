{
	"id": 0,
	"name": "Reciple",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 427,
			"name": "InteractionCommandBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 428,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 429,
							"name": "new InteractionCommandBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.constructor"
					}
				},
				{
					"id": 432,
					"name": "allowExecuteInDM",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 16,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 430,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 14,
							"character": 20,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L14"
						}
					],
					"type": {
						"type": "literal",
						"value": "INTERACTION_COMMAND"
					},
					"defaultValue": "'INTERACTION_COMMAND'"
				},
				{
					"id": 455,
					"name": "default_member_permissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set of permissions represented as a bit set for the command"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1158,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.default_member_permissions"
					}
				},
				{
					"id": 454,
					"name": "default_permission",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the command is enabled by default when the app is added to a guild"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This property is deprecated and will be removed in the future.\nYou should use "
									},
									{
										"kind": "code",
										"text": "`setDefaultMemberPermissions`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`setDMPermission`"
									},
									{
										"kind": "text",
										"text": " instead."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1154,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.default_permission"
					}
				},
				{
					"id": 451,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of this slash command"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1139,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.description"
					}
				},
				{
					"id": 452,
					"name": "description_localizations",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The localized descriptions for this command"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1143,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "en-US"
											},
											{
												"type": "literal",
												"value": "en-GB"
											},
											{
												"type": "literal",
												"value": "bg"
											},
											{
												"type": "literal",
												"value": "zh-CN"
											},
											{
												"type": "literal",
												"value": "zh-TW"
											},
											{
												"type": "literal",
												"value": "hr"
											},
											{
												"type": "literal",
												"value": "cs"
											},
											{
												"type": "literal",
												"value": "da"
											},
											{
												"type": "literal",
												"value": "nl"
											},
											{
												"type": "literal",
												"value": "fi"
											},
											{
												"type": "literal",
												"value": "fr"
											},
											{
												"type": "literal",
												"value": "de"
											},
											{
												"type": "literal",
												"value": "el"
											},
											{
												"type": "literal",
												"value": "hi"
											},
											{
												"type": "literal",
												"value": "hu"
											},
											{
												"type": "literal",
												"value": "it"
											},
											{
												"type": "literal",
												"value": "ja"
											},
											{
												"type": "literal",
												"value": "ko"
											},
											{
												"type": "literal",
												"value": "lt"
											},
											{
												"type": "literal",
												"value": "no"
											},
											{
												"type": "literal",
												"value": "pl"
											},
											{
												"type": "literal",
												"value": "pt-BR"
											},
											{
												"type": "literal",
												"value": "ro"
											},
											{
												"type": "literal",
												"value": "ru"
											},
											{
												"type": "literal",
												"value": "es-ES"
											},
											{
												"type": "literal",
												"value": "sv-SE"
											},
											{
												"type": "literal",
												"value": "th"
											},
											{
												"type": "literal",
												"value": "tr"
											},
											{
												"type": "literal",
												"value": "uk"
											},
											{
												"type": "literal",
												"value": "vi"
											}
										]
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Record",
								"qualifiedName": "Record",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"qualifiedName": "Partial",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.description_localizations"
					}
				},
				{
					"id": 456,
					"name": "dm_permission",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the command is available in DMs with the application, only for globally-scoped commands.\nBy default, commands are visible."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1163,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.dm_permission"
					}
				},
				{
					"id": 433,
					"name": "execute",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 17,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L17"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 434,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
									"line": 17,
									"character": 20,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L17"
								}
							],
							"signatures": [
								{
									"id": 435,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 436,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 422,
												"name": "RecipleInteractionCommandExecute"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 449,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of this slash command"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1131,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.name"
					}
				},
				{
					"id": 450,
					"name": "name_localizations",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The localized names for this command"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1135,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "en-US"
											},
											{
												"type": "literal",
												"value": "en-GB"
											},
											{
												"type": "literal",
												"value": "bg"
											},
											{
												"type": "literal",
												"value": "zh-CN"
											},
											{
												"type": "literal",
												"value": "zh-TW"
											},
											{
												"type": "literal",
												"value": "hr"
											},
											{
												"type": "literal",
												"value": "cs"
											},
											{
												"type": "literal",
												"value": "da"
											},
											{
												"type": "literal",
												"value": "nl"
											},
											{
												"type": "literal",
												"value": "fi"
											},
											{
												"type": "literal",
												"value": "fr"
											},
											{
												"type": "literal",
												"value": "de"
											},
											{
												"type": "literal",
												"value": "el"
											},
											{
												"type": "literal",
												"value": "hi"
											},
											{
												"type": "literal",
												"value": "hu"
											},
											{
												"type": "literal",
												"value": "it"
											},
											{
												"type": "literal",
												"value": "ja"
											},
											{
												"type": "literal",
												"value": "ko"
											},
											{
												"type": "literal",
												"value": "lt"
											},
											{
												"type": "literal",
												"value": "no"
											},
											{
												"type": "literal",
												"value": "pl"
											},
											{
												"type": "literal",
												"value": "pt-BR"
											},
											{
												"type": "literal",
												"value": "ro"
											},
											{
												"type": "literal",
												"value": "ru"
											},
											{
												"type": "literal",
												"value": "es-ES"
											},
											{
												"type": "literal",
												"value": "sv-SE"
											},
											{
												"type": "literal",
												"value": "th"
											},
											{
												"type": "literal",
												"value": "tr"
											},
											{
												"type": "literal",
												"value": "uk"
											},
											{
												"type": "literal",
												"value": "vi"
											}
										]
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Record",
								"qualifiedName": "Record",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"qualifiedName": "Partial",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.name_localizations"
					}
				},
				{
					"id": 453,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options of this slash command"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1147,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ToAPIApplicationCommandOptions",
							"qualifiedName": "ToAPIApplicationCommandOptions",
							"package": "@discordjs/builders"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.options"
					}
				},
				{
					"id": 431,
					"name": "requiredPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L15"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "PermissionString",
									"qualifiedName": "PermissionString",
									"package": "discord.js"
								},
								{
									"type": "reference",
									"name": "PermissionFlags",
									"qualifiedName": "PermissionFlags",
									"package": "discord.js"
								}
							]
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 524,
					"name": "addAttachmentOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1048,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 525,
							"name": "addAttachmentOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds an attachment option"
									}
								]
							},
							"parameters": [
								{
									"id": 526,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandAttachmentOption",
												"qualifiedName": "SlashCommandAttachmentOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 527,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1048,
															"character": 63
														}
													],
													"signatures": [
														{
															"id": 528,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 529,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandAttachmentOption",
																		"qualifiedName": "SlashCommandAttachmentOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandAttachmentOption",
																"qualifiedName": "SlashCommandAttachmentOption",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addAttachmentOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addAttachmentOption"
					}
				},
				{
					"id": 500,
					"name": "addBooleanOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1024,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 501,
							"name": "addBooleanOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a boolean option"
									}
								]
							},
							"parameters": [
								{
									"id": 502,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandBooleanOption",
												"qualifiedName": "SlashCommandBooleanOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 503,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1024,
															"character": 57
														}
													],
													"signatures": [
														{
															"id": 504,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 505,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandBooleanOption",
																		"qualifiedName": "SlashCommandBooleanOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandBooleanOption",
																"qualifiedName": "SlashCommandBooleanOption",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addBooleanOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addBooleanOption"
					}
				},
				{
					"id": 512,
					"name": "addChannelOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1036,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 513,
							"name": "addChannelOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a channel option"
									}
								]
							},
							"parameters": [
								{
									"id": 514,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandChannelOption",
												"qualifiedName": "SlashCommandChannelOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 515,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1036,
															"character": 57
														}
													],
													"signatures": [
														{
															"id": 516,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 517,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandChannelOption",
																		"qualifiedName": "SlashCommandChannelOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandChannelOption",
																"qualifiedName": "SlashCommandChannelOption",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addChannelOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addChannelOption"
					}
				},
				{
					"id": 542,
					"name": "addIntegerOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1066,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 543,
							"name": "addIntegerOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds an integer option"
									}
								]
							},
							"parameters": [
								{
									"id": 544,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandIntegerOption",
												"qualifiedName": "SlashCommandIntegerOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SlashCommandIntegerOption",
														"qualifiedName": "SlashCommandIntegerOption",
														"package": "@discordjs/builders"
													},
													{
														"type": "literal",
														"value": "setAutocomplete"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SlashCommandIntegerOption",
														"qualifiedName": "SlashCommandIntegerOption",
														"package": "@discordjs/builders"
													},
													{
														"type": "literal",
														"value": "addChoices"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 545,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1066,
															"character": 158
														}
													],
													"signatures": [
														{
															"id": 546,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 547,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandIntegerOption",
																		"qualifiedName": "SlashCommandIntegerOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "SlashCommandIntegerOption",
																		"qualifiedName": "SlashCommandIntegerOption",
																		"package": "@discordjs/builders"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SlashCommandIntegerOption",
																				"qualifiedName": "SlashCommandIntegerOption",
																				"package": "@discordjs/builders"
																			},
																			{
																				"type": "literal",
																				"value": "setAutocomplete"
																			}
																		],
																		"name": "Omit",
																		"qualifiedName": "Omit",
																		"package": "typescript"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SlashCommandIntegerOption",
																				"qualifiedName": "SlashCommandIntegerOption",
																				"package": "@discordjs/builders"
																			},
																			{
																				"type": "literal",
																				"value": "addChoices"
																			}
																		],
																		"name": "Omit",
																		"qualifiedName": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addIntegerOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addIntegerOption"
					}
				},
				{
					"id": 530,
					"name": "addMentionableOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1054,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 531,
							"name": "addMentionableOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a mentionable option"
									}
								]
							},
							"parameters": [
								{
									"id": 532,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandMentionableOption",
												"qualifiedName": "SlashCommandMentionableOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 533,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1054,
															"character": 65
														}
													],
													"signatures": [
														{
															"id": 534,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 535,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandMentionableOption",
																		"qualifiedName": "SlashCommandMentionableOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandMentionableOption",
																"qualifiedName": "SlashCommandMentionableOption",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addMentionableOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addMentionableOption"
					}
				},
				{
					"id": 548,
					"name": "addNumberOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1072,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 549,
							"name": "addNumberOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a number option"
									}
								]
							},
							"parameters": [
								{
									"id": 550,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandNumberOption",
												"qualifiedName": "SlashCommandNumberOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SlashCommandNumberOption",
														"qualifiedName": "SlashCommandNumberOption",
														"package": "@discordjs/builders"
													},
													{
														"type": "literal",
														"value": "setAutocomplete"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SlashCommandNumberOption",
														"qualifiedName": "SlashCommandNumberOption",
														"package": "@discordjs/builders"
													},
													{
														"type": "literal",
														"value": "addChoices"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 551,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1072,
															"character": 154
														}
													],
													"signatures": [
														{
															"id": 552,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 553,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandNumberOption",
																		"qualifiedName": "SlashCommandNumberOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "SlashCommandNumberOption",
																		"qualifiedName": "SlashCommandNumberOption",
																		"package": "@discordjs/builders"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SlashCommandNumberOption",
																				"qualifiedName": "SlashCommandNumberOption",
																				"package": "@discordjs/builders"
																			},
																			{
																				"type": "literal",
																				"value": "setAutocomplete"
																			}
																		],
																		"name": "Omit",
																		"qualifiedName": "Omit",
																		"package": "typescript"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SlashCommandNumberOption",
																				"qualifiedName": "SlashCommandNumberOption",
																				"package": "@discordjs/builders"
																			},
																			{
																				"type": "literal",
																				"value": "addChoices"
																			}
																		],
																		"name": "Omit",
																		"qualifiedName": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addNumberOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addNumberOption"
					}
				},
				{
					"id": 518,
					"name": "addRoleOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1042,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 519,
							"name": "addRoleOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a role option"
									}
								]
							},
							"parameters": [
								{
									"id": 520,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandRoleOption",
												"qualifiedName": "SlashCommandRoleOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 521,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1042,
															"character": 51
														}
													],
													"signatures": [
														{
															"id": 522,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 523,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandRoleOption",
																		"qualifiedName": "SlashCommandRoleOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandRoleOption",
																"qualifiedName": "SlashCommandRoleOption",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addRoleOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addRoleOption"
					}
				},
				{
					"id": 536,
					"name": "addStringOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1060,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 537,
							"name": "addStringOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a string option"
									}
								]
							},
							"parameters": [
								{
									"id": 538,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandStringOption",
												"qualifiedName": "SlashCommandStringOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SlashCommandStringOption",
														"qualifiedName": "SlashCommandStringOption",
														"package": "@discordjs/builders"
													},
													{
														"type": "literal",
														"value": "setAutocomplete"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SlashCommandStringOption",
														"qualifiedName": "SlashCommandStringOption",
														"package": "@discordjs/builders"
													},
													{
														"type": "literal",
														"value": "addChoices"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 539,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1060,
															"character": 154
														}
													],
													"signatures": [
														{
															"id": 540,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 541,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandStringOption",
																		"qualifiedName": "SlashCommandStringOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "SlashCommandStringOption",
																		"qualifiedName": "SlashCommandStringOption",
																		"package": "@discordjs/builders"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SlashCommandStringOption",
																				"qualifiedName": "SlashCommandStringOption",
																				"package": "@discordjs/builders"
																			},
																			{
																				"type": "literal",
																				"value": "setAutocomplete"
																			}
																		],
																		"name": "Omit",
																		"qualifiedName": "Omit",
																		"package": "typescript"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SlashCommandStringOption",
																				"qualifiedName": "SlashCommandStringOption",
																				"package": "@discordjs/builders"
																			},
																			{
																				"type": "literal",
																				"value": "addChoices"
																			}
																		],
																		"name": "Omit",
																		"qualifiedName": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addStringOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addStringOption"
					}
				},
				{
					"id": 474,
					"name": "addSubcommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1211,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 475,
							"name": "addSubcommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a new subcommand to this command"
									}
								]
							},
							"parameters": [
								{
									"id": 476,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns a subcommand builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandSubcommandBuilder",
												"qualifiedName": "SlashCommandSubcommandBuilder",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 477,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1211,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 478,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 479,
																	"name": "subcommandGroup",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandSubcommandBuilder",
																		"qualifiedName": "SlashCommandSubcommandBuilder",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandSubcommandBuilder",
																"qualifiedName": "SlashCommandSubcommandBuilder",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SlashCommandSubcommandsOnlyBuilder",
								"qualifiedName": "SlashCommandSubcommandsOnlyBuilder",
								"package": "@discordjs/builders"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addSubcommand"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addSubcommand"
					}
				},
				{
					"id": 468,
					"name": "addSubcommandGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1205,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 469,
							"name": "addSubcommandGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a new subcommand group to this command"
									}
								]
							},
							"parameters": [
								{
									"id": 470,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns a subcommand group builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandSubcommandGroupBuilder",
												"qualifiedName": "SlashCommandSubcommandGroupBuilder",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 471,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1205,
															"character": 68
														}
													],
													"signatures": [
														{
															"id": 472,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 473,
																	"name": "subcommandGroup",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandSubcommandGroupBuilder",
																		"qualifiedName": "SlashCommandSubcommandGroupBuilder",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandSubcommandGroupBuilder",
																"qualifiedName": "SlashCommandSubcommandGroupBuilder",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SlashCommandSubcommandsOnlyBuilder",
								"qualifiedName": "SlashCommandSubcommandsOnlyBuilder",
								"package": "@discordjs/builders"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addSubcommandGroup"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addSubcommandGroup"
					}
				},
				{
					"id": 506,
					"name": "addUserOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1030,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 507,
							"name": "addUserOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a user option"
									}
								]
							},
							"parameters": [
								{
									"id": 508,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an option builder, or an already built builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SlashCommandUserOption",
												"qualifiedName": "SlashCommandUserOption",
												"package": "@discordjs/builders"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 509,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
															"line": 1030,
															"character": 51
														}
													],
													"signatures": [
														{
															"id": 510,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 511,
																	"name": "builder",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "SlashCommandUserOption",
																		"qualifiedName": "SlashCommandUserOption",
																		"package": "@discordjs/builders"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "SlashCommandUserOption",
																"qualifiedName": "SlashCommandUserOption",
																"package": "@discordjs/builders"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 427,
										"name": "InteractionCommandBuilder"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "addSubcommand"
											},
											{
												"type": "literal",
												"value": "addSubcommandGroup"
											}
										]
									}
								],
								"name": "Omit",
								"qualifiedName": "Omit",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.addUserOption"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.addUserOption"
					}
				},
				{
					"id": 440,
					"name": "setAllowExecuteInDM",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 32,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 441,
							"name": "setAllowExecuteInDM",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set if command can be executed in dms"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "use "
											},
											{
												"kind": "code",
												"text": "`InteractionCommandBuilder.setDMPermission()`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 442,
									"name": "allowExecuteInDM",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				},
				{
					"id": 465,
					"name": "setDMPermission",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1199,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 466,
							"name": "setDMPermission",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets if the command is available in DMs with the application, only for globally-scoped commands.\nBy default, commands are visible."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://discord.com/developers/docs/interactions/application-commands#permissions"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 467,
									"name": "enabled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the command should be enabled in DMs"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setDMPermission"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setDMPermission"
					}
				},
				{
					"id": 462,
					"name": "setDefaultMemberPermissions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1190,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 463,
							"name": "setDefaultMemberPermissions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the default permissions a member should have in order to run the command.\n\n**Note:** You can set this to "
									},
									{
										"kind": "code",
										"text": "`'0'`"
									},
									{
										"kind": "text",
										"text": " to disable the command by default."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://discord.com/developers/docs/interactions/application-commands#permissions"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 464,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The permissions bit field to set"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "bigint"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setDefaultMemberPermissions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setDefaultMemberPermissions"
					}
				},
				{
					"id": 459,
					"name": "setDefaultPermission",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1180,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 460,
							"name": "setDefaultPermission",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets whether the command is enabled by default when the application is added to a guild.\n\n**Note**: If set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", you will have to later "
									},
									{
										"kind": "code",
										"text": "`PUT`"
									},
									{
										"kind": "text",
										"text": " the permissions for this command."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://discord.com/developers/docs/interactions/application-commands#permissions"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`setDefaultMemberPermissions`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`setDMPermission`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 461,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether or not to enable this command by default"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setDefaultPermission"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setDefaultPermission"
					}
				},
				{
					"id": 483,
					"name": "setDescription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 873,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 484,
							"name": "setDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the description"
									}
								]
							},
							"parameters": [
								{
									"id": 485,
									"name": "description",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The description"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setDescription"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setDescription"
					}
				},
				{
					"id": 493,
					"name": "setDescriptionLocalization",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 893,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 494,
							"name": "setDescriptionLocalization",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a description localization"
									}
								]
							},
							"parameters": [
								{
									"id": 495,
									"name": "locale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locale to set a description for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "en-US"
											},
											{
												"type": "literal",
												"value": "en-GB"
											},
											{
												"type": "literal",
												"value": "bg"
											},
											{
												"type": "literal",
												"value": "zh-CN"
											},
											{
												"type": "literal",
												"value": "zh-TW"
											},
											{
												"type": "literal",
												"value": "hr"
											},
											{
												"type": "literal",
												"value": "cs"
											},
											{
												"type": "literal",
												"value": "da"
											},
											{
												"type": "literal",
												"value": "nl"
											},
											{
												"type": "literal",
												"value": "fi"
											},
											{
												"type": "literal",
												"value": "fr"
											},
											{
												"type": "literal",
												"value": "de"
											},
											{
												"type": "literal",
												"value": "el"
											},
											{
												"type": "literal",
												"value": "hi"
											},
											{
												"type": "literal",
												"value": "hu"
											},
											{
												"type": "literal",
												"value": "it"
											},
											{
												"type": "literal",
												"value": "ja"
											},
											{
												"type": "literal",
												"value": "ko"
											},
											{
												"type": "literal",
												"value": "lt"
											},
											{
												"type": "literal",
												"value": "no"
											},
											{
												"type": "literal",
												"value": "pl"
											},
											{
												"type": "literal",
												"value": "pt-BR"
											},
											{
												"type": "literal",
												"value": "ro"
											},
											{
												"type": "literal",
												"value": "ru"
											},
											{
												"type": "literal",
												"value": "es-ES"
											},
											{
												"type": "literal",
												"value": "sv-SE"
											},
											{
												"type": "literal",
												"value": "th"
											},
											{
												"type": "literal",
												"value": "tr"
											},
											{
												"type": "literal",
												"value": "uk"
											},
											{
												"type": "literal",
												"value": "vi"
											}
										]
									}
								},
								{
									"id": 496,
									"name": "localizedDescription",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The localized description for the given locale"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setDescriptionLocalization"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setDescriptionLocalization"
					}
				},
				{
					"id": 497,
					"name": "setDescriptionLocalizations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 899,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 498,
							"name": "setDescriptionLocalizations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the description localizations"
									}
								]
							},
							"parameters": [
								{
									"id": 499,
									"name": "localizedDescriptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The dictionary of localized descriptions to set"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "en-US"
																	},
																	{
																		"type": "literal",
																		"value": "en-GB"
																	},
																	{
																		"type": "literal",
																		"value": "bg"
																	},
																	{
																		"type": "literal",
																		"value": "zh-CN"
																	},
																	{
																		"type": "literal",
																		"value": "zh-TW"
																	},
																	{
																		"type": "literal",
																		"value": "hr"
																	},
																	{
																		"type": "literal",
																		"value": "cs"
																	},
																	{
																		"type": "literal",
																		"value": "da"
																	},
																	{
																		"type": "literal",
																		"value": "nl"
																	},
																	{
																		"type": "literal",
																		"value": "fi"
																	},
																	{
																		"type": "literal",
																		"value": "fr"
																	},
																	{
																		"type": "literal",
																		"value": "de"
																	},
																	{
																		"type": "literal",
																		"value": "el"
																	},
																	{
																		"type": "literal",
																		"value": "hi"
																	},
																	{
																		"type": "literal",
																		"value": "hu"
																	},
																	{
																		"type": "literal",
																		"value": "it"
																	},
																	{
																		"type": "literal",
																		"value": "ja"
																	},
																	{
																		"type": "literal",
																		"value": "ko"
																	},
																	{
																		"type": "literal",
																		"value": "lt"
																	},
																	{
																		"type": "literal",
																		"value": "no"
																	},
																	{
																		"type": "literal",
																		"value": "pl"
																	},
																	{
																		"type": "literal",
																		"value": "pt-BR"
																	},
																	{
																		"type": "literal",
																		"value": "ro"
																	},
																	{
																		"type": "literal",
																		"value": "ru"
																	},
																	{
																		"type": "literal",
																		"value": "es-ES"
																	},
																	{
																		"type": "literal",
																		"value": "sv-SE"
																	},
																	{
																		"type": "literal",
																		"value": "th"
																	},
																	{
																		"type": "literal",
																		"value": "tr"
																	},
																	{
																		"type": "literal",
																		"value": "uk"
																	},
																	{
																		"type": "literal",
																		"value": "vi"
																	}
																]
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "Record",
														"qualifiedName": "Record",
														"package": "typescript"
													}
												],
												"name": "Partial",
												"qualifiedName": "Partial",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setDescriptionLocalizations"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setDescriptionLocalizations"
					}
				},
				{
					"id": 443,
					"name": "setExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 43,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 444,
							"name": "setExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function when the command is executed"
									}
								]
							},
							"parameters": [
								{
									"id": 445,
									"name": "execute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 446,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
													"line": 43,
													"character": 31,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L43"
												}
											],
											"signatures": [
												{
													"id": 447,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 448,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 422,
																"name": "RecipleInteractionCommandExecute"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				},
				{
					"id": 480,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 867,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 481,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the name"
									}
								]
							},
							"parameters": [
								{
									"id": 482,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setName"
					}
				},
				{
					"id": 486,
					"name": "setNameLocalization",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 880,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 487,
							"name": "setNameLocalization",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a name localization"
									}
								]
							},
							"parameters": [
								{
									"id": 488,
									"name": "locale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locale to set a description for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "en-US"
											},
											{
												"type": "literal",
												"value": "en-GB"
											},
											{
												"type": "literal",
												"value": "bg"
											},
											{
												"type": "literal",
												"value": "zh-CN"
											},
											{
												"type": "literal",
												"value": "zh-TW"
											},
											{
												"type": "literal",
												"value": "hr"
											},
											{
												"type": "literal",
												"value": "cs"
											},
											{
												"type": "literal",
												"value": "da"
											},
											{
												"type": "literal",
												"value": "nl"
											},
											{
												"type": "literal",
												"value": "fi"
											},
											{
												"type": "literal",
												"value": "fr"
											},
											{
												"type": "literal",
												"value": "de"
											},
											{
												"type": "literal",
												"value": "el"
											},
											{
												"type": "literal",
												"value": "hi"
											},
											{
												"type": "literal",
												"value": "hu"
											},
											{
												"type": "literal",
												"value": "it"
											},
											{
												"type": "literal",
												"value": "ja"
											},
											{
												"type": "literal",
												"value": "ko"
											},
											{
												"type": "literal",
												"value": "lt"
											},
											{
												"type": "literal",
												"value": "no"
											},
											{
												"type": "literal",
												"value": "pl"
											},
											{
												"type": "literal",
												"value": "pt-BR"
											},
											{
												"type": "literal",
												"value": "ro"
											},
											{
												"type": "literal",
												"value": "ru"
											},
											{
												"type": "literal",
												"value": "es-ES"
											},
											{
												"type": "literal",
												"value": "sv-SE"
											},
											{
												"type": "literal",
												"value": "th"
											},
											{
												"type": "literal",
												"value": "tr"
											},
											{
												"type": "literal",
												"value": "uk"
											},
											{
												"type": "literal",
												"value": "vi"
											}
										]
									}
								},
								{
									"id": 489,
									"name": "localizedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The localized description for the given locale"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setNameLocalization"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setNameLocalization"
					}
				},
				{
					"id": 490,
					"name": "setNameLocalizations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 886,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 491,
							"name": "setNameLocalizations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the name localizations"
									}
								]
							},
							"parameters": [
								{
									"id": 492,
									"name": "localizedNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The dictionary of localized descriptions to set"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "en-US"
																	},
																	{
																		"type": "literal",
																		"value": "en-GB"
																	},
																	{
																		"type": "literal",
																		"value": "bg"
																	},
																	{
																		"type": "literal",
																		"value": "zh-CN"
																	},
																	{
																		"type": "literal",
																		"value": "zh-TW"
																	},
																	{
																		"type": "literal",
																		"value": "hr"
																	},
																	{
																		"type": "literal",
																		"value": "cs"
																	},
																	{
																		"type": "literal",
																		"value": "da"
																	},
																	{
																		"type": "literal",
																		"value": "nl"
																	},
																	{
																		"type": "literal",
																		"value": "fi"
																	},
																	{
																		"type": "literal",
																		"value": "fr"
																	},
																	{
																		"type": "literal",
																		"value": "de"
																	},
																	{
																		"type": "literal",
																		"value": "el"
																	},
																	{
																		"type": "literal",
																		"value": "hi"
																	},
																	{
																		"type": "literal",
																		"value": "hu"
																	},
																	{
																		"type": "literal",
																		"value": "it"
																	},
																	{
																		"type": "literal",
																		"value": "ja"
																	},
																	{
																		"type": "literal",
																		"value": "ko"
																	},
																	{
																		"type": "literal",
																		"value": "lt"
																	},
																	{
																		"type": "literal",
																		"value": "no"
																	},
																	{
																		"type": "literal",
																		"value": "pl"
																	},
																	{
																		"type": "literal",
																		"value": "pt-BR"
																	},
																	{
																		"type": "literal",
																		"value": "ro"
																	},
																	{
																		"type": "literal",
																		"value": "ru"
																	},
																	{
																		"type": "literal",
																		"value": "es-ES"
																	},
																	{
																		"type": "literal",
																		"value": "sv-SE"
																	},
																	{
																		"type": "literal",
																		"value": "th"
																	},
																	{
																		"type": "literal",
																		"value": "tr"
																	},
																	{
																		"type": "literal",
																		"value": "uk"
																	},
																	{
																		"type": "literal",
																		"value": "vi"
																	}
																]
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "Record",
														"qualifiedName": "Record",
														"package": "typescript"
													}
												],
												"name": "Partial",
												"qualifiedName": "Partial",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.setNameLocalizations"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.setNameLocalizations"
					}
				},
				{
					"id": 437,
					"name": "setRequiredPermissions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 22,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 438,
							"name": "setRequiredPermissions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set required permissions before executing the command"
									}
								]
							},
							"parameters": [
								{
									"id": 439,
									"name": "requiredPermissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "PermissionString",
											"qualifiedName": "PermissionString",
											"package": "discord.js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				},
				{
					"id": 457,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@discordjs/builders/dist/index.d.ts",
							"line": 1169,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the final data that should be sent to Discord.\n\n**Note:** Calling this function will validate required properties based on their conditions."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RESTPostAPIApplicationCommandsJSONBody",
								"qualifiedName": "RESTPostAPIApplicationCommandsJSONBody",
								"package": "discord-api-types"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						428
					]
				},
				{
					"title": "Properties",
					"children": [
						432,
						430,
						455,
						454,
						451,
						452,
						456,
						433,
						449,
						450,
						453,
						431
					]
				},
				{
					"title": "Methods",
					"children": [
						524,
						500,
						512,
						542,
						530,
						548,
						518,
						536,
						474,
						468,
						506,
						440,
						465,
						462,
						459,
						483,
						493,
						497,
						443,
						480,
						486,
						490,
						437,
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
					"line": 13,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L13"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "SlashCommandBuilder",
					"qualifiedName": "SlashCommandBuilder",
					"package": "@discordjs/builders"
				}
			]
		},
		{
			"id": 566,
			"name": "MessageCommandBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 567,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 568,
							"name": "new MessageCommandBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 572,
					"name": "aliases",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 28,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L28"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 577,
					"name": "allowExecuteByBots",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 33,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 576,
					"name": "allowExecuteInDM",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 32,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 569,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 25,
							"character": 20,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L25"
						}
					],
					"type": {
						"type": "literal",
						"value": "MESSAGE_COMMAND"
					},
					"defaultValue": "'MESSAGE_COMMAND'"
				},
				{
					"id": 571,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 27,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L27"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 578,
					"name": "execute",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 34,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L34"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 579,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
									"line": 34,
									"character": 20,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L34"
								}
							],
							"signatures": [
								{
									"id": 580,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 581,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 554,
												"name": "RecipleMessageCommandExecute"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 570,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 26,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L26"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 573,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 29,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L29"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 618,
							"name": "MessageCommandOptionBuilder"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 575,
					"name": "requiredPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L31"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "PermissionString",
									"qualifiedName": "PermissionString",
									"package": "discord.js"
								},
								{
									"type": "reference",
									"name": "PermissionFlags",
									"qualifiedName": "PermissionFlags",
									"package": "discord.js"
								}
							]
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 574,
					"name": "validateOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 30,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 588,
					"name": "addAliases",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 57,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 589,
							"name": "addAliases",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add aliases to the command"
									}
								]
							},
							"parameters": [
								{
									"id": 590,
									"name": "aliases",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 606,
					"name": "addOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 105,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L105"
						}
					],
					"signatures": [
						{
							"id": 607,
							"name": "addOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add option to the command"
									}
								]
							},
							"parameters": [
								{
									"id": 608,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 618,
												"name": "MessageCommandOptionBuilder"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 609,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
															"line": 105,
															"character": 58,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L105"
														}
													],
													"signatures": [
														{
															"id": 610,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 611,
																	"name": "constructor",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 618,
																		"name": "MessageCommandOptionBuilder"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 618,
																"name": "MessageCommandOptionBuilder"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 615,
					"name": "getCommandOptionValues",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 129,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L129"
						}
					],
					"signatures": [
						{
							"id": 616,
							"name": "getCommandOptionValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "validate given command options"
									}
								]
							},
							"parameters": [
								{
									"id": 617,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Command",
										"qualifiedName": "Command",
										"package": "fallout-utility"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							}
						}
					]
				},
				{
					"id": 597,
					"name": "setAllowExecuteByBots",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 87,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L87"
						}
					],
					"signatures": [
						{
							"id": 598,
							"name": "setAllowExecuteByBots",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow command to be executed by bots"
									}
								]
							},
							"parameters": [
								{
									"id": 599,
									"name": "allowExecuteByBots",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 594,
					"name": "setAllowExecuteInDM",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 78,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 595,
							"name": "setAllowExecuteInDM",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set if command can be executed in dms"
									}
								]
							},
							"parameters": [
								{
									"id": 596,
									"name": "allowExecuteInDM",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 585,
					"name": "setDescription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 48,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 586,
							"name": "setDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the command description"
									}
								]
							},
							"parameters": [
								{
									"id": 587,
									"name": "description",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 600,
					"name": "setExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 96,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 601,
							"name": "setExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function when the command is executed"
									}
								]
							},
							"parameters": [
								{
									"id": 602,
									"name": "execute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 603,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
													"line": 96,
													"character": 31,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L96"
												}
											],
											"signatures": [
												{
													"id": 604,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 605,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 554,
																"name": "RecipleMessageCommandExecute"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 582,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 39,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L39"
						}
					],
					"signatures": [
						{
							"id": 583,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the command name"
									}
								]
							},
							"parameters": [
								{
									"id": 584,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 591,
					"name": "setRequiredPermissions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 69,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 592,
							"name": "setRequiredPermissions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the default required permissions to execute this command"
									}
								]
							},
							"parameters": [
								{
									"id": 593,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"name": "PermissionString",
													"qualifiedName": "PermissionString",
													"package": "discord.js"
												},
												{
													"type": "reference",
													"name": "PermissionFlags",
													"qualifiedName": "PermissionFlags",
													"package": "discord.js"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 612,
					"name": "setValidateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 120,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L120"
						}
					],
					"signatures": [
						{
							"id": 613,
							"name": "setValidateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Validate options before executing"
									}
								]
							},
							"parameters": [
								{
									"id": 614,
									"name": "validateOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 566,
								"name": "MessageCommandBuilder"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						567
					]
				},
				{
					"title": "Properties",
					"children": [
						572,
						577,
						576,
						569,
						571,
						578,
						570,
						573,
						575,
						574
					]
				},
				{
					"title": "Methods",
					"children": [
						588,
						606,
						615,
						597,
						594,
						585,
						600,
						582,
						591,
						612
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
					"line": 24,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L24"
				}
			]
		},
		{
			"id": 618,
			"name": "MessageCommandOptionBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 619,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 620,
							"name": "new MessageCommandOptionBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 618,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 622,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 3,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L3"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 621,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 2,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 623,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 4,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L4"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 624,
					"name": "validator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 5,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 625,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
									"line": 5,
									"character": 22,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L5"
								}
							],
							"signatures": [
								{
									"id": 626,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 627,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 631,
					"name": "setDescription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 19,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L19"
						}
					],
					"signatures": [
						{
							"id": 632,
							"name": "setDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set command option description"
									}
								]
							},
							"parameters": [
								{
									"id": 633,
									"name": "description",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 618,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 628,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 10,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 629,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set command option name"
									}
								]
							},
							"parameters": [
								{
									"id": 630,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 618,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 634,
					"name": "setRequired",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 28,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 635,
							"name": "setRequired",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set if this option is required"
									}
								]
							},
							"parameters": [
								{
									"id": 636,
									"name": "required",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 618,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 637,
					"name": "setValidator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 37,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 638,
							"name": "setValidator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set your custom function to validate given value for this option"
									}
								]
							},
							"parameters": [
								{
									"id": 639,
									"name": "validator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 640,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
													"line": 37,
													"character": 35,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L37"
												}
											],
											"signatures": [
												{
													"id": 641,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 642,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 618,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						619
					]
				},
				{
					"title": "Properties",
					"children": [
						622,
						621,
						623,
						624
					]
				},
				{
					"title": "Methods",
					"children": [
						631,
						628,
						634,
						637
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
					"line": 1,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptionBuilder.ts#L1"
				}
			]
		},
		{
			"id": 643,
			"name": "MessageCommandOptions",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 679,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
							"line": 4,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 680,
							"name": "new MessageCommandOptions",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 681,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 560,
											"name": "MessageCommandValidatedOption"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 643,
								"name": "MessageCommandOptions"
							},
							"overwrites": {
								"type": "reference",
								"name": "Array<MessageCommandValidatedOption>.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Array<MessageCommandValidatedOption>.constructor"
					}
				},
				{
					"id": 696,
					"name": "length",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1279,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.length"
					}
				},
				{
					"id": 678,
					"name": "[species]",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 314,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ArrayConstructor",
						"qualifiedName": "ArrayConstructor",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.__@species@694"
					}
				},
				{
					"id": 934,
					"name": "[iterator]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 935,
							"name": "[iterator]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Iterator"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								],
								"name": "IterableIterator",
								"qualifiedName": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.__@iterator@185"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.__@iterator@185"
					}
				},
				{
					"id": 936,
					"name": "[unscopables]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 99,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 937,
							"name": "[unscopables]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an object whose properties have the value 'true'\r\nwhen they will be absent when used in a 'with' statement."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 938,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 939,
											"name": "copyWithin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 100,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 940,
											"name": "entries",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 101,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 941,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 102,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 942,
											"name": "find",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 943,
											"name": "findIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 104,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 944,
											"name": "keys",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 105,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 945,
											"name": "values",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 106,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												939,
												940,
												941,
												942,
												943,
												944,
												945
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
											"line": 99,
											"character": 28
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.__@unscopables@202"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.__@unscopables@202"
					}
				},
				{
					"id": 946,
					"name": "at",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 947,
							"name": "at",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Takes an integer value and returns the item at that index,\nallowing for positive and negative integers.\nNegative integers count back from the last item in the array."
									}
								]
							},
							"parameters": [
								{
									"id": 948,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.at"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.at"
					}
				},
				{
					"id": 706,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1303,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1309,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 707,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\r\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"parameters": [
								{
									"id": 708,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 560,
													"name": "MessageCommandValidatedOption"
												}
											],
											"name": "ConcatArray",
											"qualifiedName": "ConcatArray",
											"package": "typescript"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.concat"
							}
						},
						{
							"id": 709,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\r\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"parameters": [
								{
									"id": 710,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 560,
													"name": "MessageCommandValidatedOption"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 560,
															"name": "MessageCommandValidatedOption"
														}
													],
													"name": "ConcatArray",
													"qualifiedName": "ConcatArray",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.concat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.concat"
					}
				},
				{
					"id": 901,
					"name": "copyWithin",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 902,
							"name": "copyWithin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target"
									}
								]
							},
							"parameters": [
								{
									"id": 903,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If target is negative, it is treated as length+target where length is the\r\nlength of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 904,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If start is negative, it is treated as length+start. If end is negative, it\r\nis treated as length+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 905,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If not specified, length of the this object is used as its default value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 643,
								"name": "MessageCommandOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.copyWithin"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.copyWithin"
					}
				},
				{
					"id": 906,
					"name": "entries",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 907,
							"name": "entries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of key, value pairs for every entry in the array"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 560,
												"name": "MessageCommandValidatedOption"
											}
										]
									}
								],
								"name": "IterableIterator",
								"qualifiedName": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.entries"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.entries"
					}
				},
				{
					"id": 748,
					"name": "every",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1386,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1395,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 749,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"typeParameter": [
								{
									"id": 750,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								}
							],
							"parameters": [
								{
									"id": 751,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\r\nthe predicate function for each element in the array until the predicate returns a value\r\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 752,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1386,
													"character": 34
												}
											],
											"signatures": [
												{
													"id": 753,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 754,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 755,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 756,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"id": 750,
															"name": "S",
															"qualifiedName": "S",
															"package": "typescript"
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 757,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\r\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 750,
										"name": "S",
										"qualifiedName": "S",
										"package": "typescript"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.every"
							}
						},
						{
							"id": 758,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"parameters": [
								{
									"id": 759,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\r\nthe predicate function for each element in the array until the predicate returns a value\r\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 760,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1395,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 761,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 762,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 763,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 764,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 765,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\r\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.every"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.every"
					}
				},
				{
					"id": 896,
					"name": "fill",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 897,
							"name": "fill",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes all array elements from "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " index to a static "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " and returns the modified array"
									}
								]
							},
							"parameters": [
								{
									"id": 898,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to fill array section with"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								},
								{
									"id": 899,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to start filling the array at. If start is negative, it is treated as\r\nlength+start where length is the length of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 900,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to stop filling the array at. If end is negative, it is treated as\r\nlength+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 643,
								"name": "MessageCommandOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.fill"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.fill"
					}
				},
				{
					"id": 794,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1422,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1428,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 795,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"typeParameter": [
								{
									"id": 796,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								}
							],
							"parameters": [
								{
									"id": 797,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 798,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1422,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 799,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 800,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 801,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 802,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"id": 796,
															"name": "S",
															"qualifiedName": "S",
															"package": "typescript"
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 803,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 796,
									"name": "S",
									"qualifiedName": "S",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.filter"
							}
						},
						{
							"id": 804,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"parameters": [
								{
									"id": 805,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 806,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1428,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 807,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 808,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 809,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 810,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 811,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.filter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.filter"
					}
				},
				{
					"id": 868,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 31,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 869,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise."
									}
								]
							},
							"typeParameter": [
								{
									"id": 870,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								}
							],
							"parameters": [
								{
									"id": 871,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\r\norder, until it finds one where predicate returns true. If such an element is found, find\r\nimmediately returns that element value. Otherwise, find returns undefined."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 872,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 31,
													"character": 33
												}
											],
											"signatures": [
												{
													"id": 873,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 874,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														},
														{
															"id": 875,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 876,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 877,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"id": 870,
															"name": "S",
															"qualifiedName": "S",
															"package": "typescript"
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 878,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\r\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 870,
										"name": "S",
										"qualifiedName": "S",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.find"
							}
						},
						{
							"id": 879,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 880,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 881,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 32,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 882,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 883,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 884,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 885,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 886,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.find"
					}
				},
				{
					"id": 887,
					"name": "findIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 888,
							"name": "findIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise."
									}
								]
							},
							"parameters": [
								{
									"id": 889,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\r\norder, until it finds one where predicate returns true. If such an element is found,\r\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 890,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 43,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 891,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 892,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 893,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 894,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 895,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\r\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.findIndex"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.findIndex"
					}
				},
				{
					"id": 928,
					"name": "flat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 929,
							"name": "flat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new array with all sub-array elements concatenated into it recursively up to the\r\nspecified depth."
									}
								]
							},
							"typeParameter": [
								{
									"id": 930,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 931,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"default": {
										"type": "literal",
										"value": 1
									}
								}
							],
							"parameters": [
								{
									"id": 932,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 930,
										"name": "A",
										"qualifiedName": "A",
										"package": "typescript"
									}
								},
								{
									"id": 933,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum recursion depth"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 931,
										"name": "D",
										"qualifiedName": "D",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 930,
											"name": "A",
											"qualifiedName": "A",
											"package": "typescript"
										},
										{
											"type": "reference",
											"id": 931,
											"name": "D",
											"qualifiedName": "D",
											"package": "typescript"
										}
									],
									"name": "FlatArray",
									"qualifiedName": "FlatArray",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.flat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.flat"
					}
				},
				{
					"id": 916,
					"name": "flatMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 70,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 917,
							"name": "flatMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array. Then, flattens the result into\r\na new array.\r\nThis is identical to a map followed by flat with depth 1."
									}
								]
							},
							"typeParameter": [
								{
									"id": 918,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 919,
									"name": "This",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 920,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The flatMap method calls the\r\ncallback function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 921,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
													"line": 71,
													"character": 18
												}
											],
											"signatures": [
												{
													"id": 922,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 923,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 919,
																"name": "This",
																"qualifiedName": "This",
																"package": "typescript"
															}
														},
														{
															"id": 924,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 925,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 926,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 918,
																"name": "U",
																"qualifiedName": "U",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"id": 918,
																		"name": "U",
																		"qualifiedName": "U",
																		"package": "typescript"
																	}
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 927,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callback function. If\r\nthisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 919,
										"name": "This",
										"qualifiedName": "This",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 918,
									"name": "U",
									"qualifiedName": "U",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.flatMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.flatMap"
					}
				},
				{
					"id": 775,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1410,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 776,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Performs the specified action for each element in an array."
									}
								]
							},
							"parameters": [
								{
									"id": 777,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 778,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1410,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 779,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 780,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 781,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 782,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 783,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.forEach"
					}
				},
				{
					"id": 682,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L12"
						},
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L13"
						},
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
							"line": 14,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 683,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the option info"
									}
								]
							},
							"parameters": [
								{
									"id": 684,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 685,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 560,
								"name": "MessageCommandValidatedOption"
							}
						},
						{
							"id": 686,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 687,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 688,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								]
							}
						}
					]
				},
				{
					"id": 689,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
							"line": 24,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L24"
						},
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
							"line": 25,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L25"
						},
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
							"line": 26,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L26"
						}
					],
					"signatures": [
						{
							"id": 690,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the option value"
									}
								]
							},
							"parameters": [
								{
									"id": 691,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 692,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 693,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 694,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 695,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 912,
					"name": "includes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 913,
							"name": "includes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether an array includes a certain element, returning true or false as appropriate."
									}
								]
							},
							"parameters": [
								{
									"id": 914,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element to search for."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								},
								{
									"id": 915,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The position in this array at which to begin searching for searchElement."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.includes"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.includes"
					}
				},
				{
					"id": 740,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1371,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 741,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present."
									}
								]
							},
							"parameters": [
								{
									"id": 742,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								},
								{
									"id": 743,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.indexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.indexOf"
					}
				},
				{
					"id": 711,
					"name": "join",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1314,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 712,
							"name": "join",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds all the elements of an array into a string, separated by the specified separator string."
									}
								]
							},
							"parameters": [
								{
									"id": 713,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.join"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.join"
					}
				},
				{
					"id": 908,
					"name": "keys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 70,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 909,
							"name": "keys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of keys in the array"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator",
								"qualifiedName": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.keys"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.keys"
					}
				},
				{
					"id": 744,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1377,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 745,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present."
									}
								]
							},
							"parameters": [
								{
									"id": 746,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								},
								{
									"id": 747,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.lastIndexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.lastIndexOf"
					}
				},
				{
					"id": 784,
					"name": "map",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1416,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 785,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
									}
								]
							},
							"typeParameter": [
								{
									"id": 786,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 787,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 788,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1416,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 789,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 790,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 791,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 792,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 786,
														"name": "U",
														"qualifiedName": "U",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 793,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 786,
									"name": "U",
									"qualifiedName": "U",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.map"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.map"
					}
				},
				{
					"id": 701,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1292,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 702,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the last element from an array and returns it.\r\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.pop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.pop"
					}
				},
				{
					"id": 703,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1297,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 704,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends new elements to the end of an array, and returns the new length of the array."
									}
								]
							},
							"parameters": [
								{
									"id": 705,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New elements to add to the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 560,
											"name": "MessageCommandValidatedOption"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.push"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.push"
					}
				},
				{
					"id": 812,
					"name": "reduce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1434,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1435,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1441,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 813,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"parameters": [
								{
									"id": 814,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 815,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1434,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 816,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 817,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 818,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 819,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 820,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 560,
														"name": "MessageCommandValidatedOption"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 560,
								"name": "MessageCommandValidatedOption"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.reduce"
							}
						},
						{
							"id": 821,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 822,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 823,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1435,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 824,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 825,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 826,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 827,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 828,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 560,
														"name": "MessageCommandValidatedOption"
													}
												}
											]
										}
									}
								},
								{
									"id": 829,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 560,
								"name": "MessageCommandValidatedOption"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.reduce"
							}
						},
						{
							"id": 830,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"typeParameter": [
								{
									"id": 831,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 832,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 833,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1441,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 834,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 835,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 831,
																"name": "U",
																"qualifiedName": "U",
																"package": "typescript"
															}
														},
														{
															"id": 836,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 837,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 838,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 831,
														"name": "U",
														"qualifiedName": "U",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 839,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 831,
										"name": "U",
										"qualifiedName": "U",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 831,
								"name": "U",
								"qualifiedName": "U",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.reduce"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.reduce"
					}
				},
				{
					"id": 840,
					"name": "reduceRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1447,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1448,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1454,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 841,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"parameters": [
								{
									"id": 842,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 843,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1447,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 844,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 845,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 846,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 847,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 848,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 560,
														"name": "MessageCommandValidatedOption"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 560,
								"name": "MessageCommandValidatedOption"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 849,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 850,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 851,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1448,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 852,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 853,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 854,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 855,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 856,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 560,
														"name": "MessageCommandValidatedOption"
													}
												}
											]
										}
									}
								},
								{
									"id": 857,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 560,
								"name": "MessageCommandValidatedOption"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 858,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"typeParameter": [
								{
									"id": 859,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 860,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 861,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1454,
													"character": 31
												}
											],
											"signatures": [
												{
													"id": 862,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 863,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 859,
																"name": "U",
																"qualifiedName": "U",
																"package": "typescript"
															}
														},
														{
															"id": 864,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 865,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 866,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 859,
														"name": "U",
														"qualifiedName": "U",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 867,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 859,
										"name": "U",
										"qualifiedName": "U",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 859,
								"name": "U",
								"qualifiedName": "U",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.reduceRight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.reduceRight"
					}
				},
				{
					"id": 714,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1319,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 715,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reverses the elements in an array in place.\r\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.reverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.reverse"
					}
				},
				{
					"id": 716,
					"name": "shift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1324,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 717,
							"name": "shift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the first element from an array and returns it.\r\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.shift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.shift"
					}
				},
				{
					"id": 718,
					"name": "slice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1334,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 719,
							"name": "slice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of a section of an array.\r\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\r\nFor example, -2 refers to the second to last element of the array."
									}
								]
							},
							"parameters": [
								{
									"id": 720,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The beginning index of the specified portion of the array.\r\nIf start is undefined, then the slice begins at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 721,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\nIf end is undefined, then the slice extends to the end of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.slice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.slice"
					}
				},
				{
					"id": 766,
					"name": "some",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1404,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 767,
							"name": "some",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the specified callback function returns true for any element of an array."
									}
								]
							},
							"parameters": [
								{
									"id": 768,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The some method calls\r\nthe predicate function for each element in the array until the predicate returns a value\r\nwhich is coercible to the Boolean value true, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 769,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1404,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 770,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 771,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 772,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 773,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 560,
																	"name": "MessageCommandValidatedOption"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 774,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\r\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.some"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.some"
					}
				},
				{
					"id": 722,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1345,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 723,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sorts an array in place.\r\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"parameters": [
								{
									"id": 724,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function used to determine the order of the elements. It is expected to return\r\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\r\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n"
											},
											{
												"kind": "code",
												"text": "```ts\r\n[11,2,22,1].sort((a, b) => a - b)\r\n```"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 725,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1345,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 726,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 727,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														},
														{
															"id": 728,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 560,
																"name": "MessageCommandValidatedOption"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 643,
								"name": "MessageCommandOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.sort"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.sort"
					}
				},
				{
					"id": 729,
					"name": "splice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1352,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1360,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 730,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 731,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 732,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.splice"
							}
						},
						{
							"id": 733,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 734,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 735,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 736,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert into the array in place of the deleted elements."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 560,
											"name": "MessageCommandValidatedOption"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 560,
									"name": "MessageCommandValidatedOption"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.splice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.splice"
					}
				},
				{
					"id": 699,
					"name": "toLocaleString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1287,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 700,
							"name": "toLocaleString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.toLocaleString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.toLocaleString"
					}
				},
				{
					"id": 697,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1283,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 698,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.toString"
					}
				},
				{
					"id": 737,
					"name": "unshift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1365,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 738,
							"name": "unshift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inserts new elements at the start of an array, and returns the new length of the array."
									}
								]
							},
							"parameters": [
								{
									"id": 739,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert at the start of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 560,
											"name": "MessageCommandValidatedOption"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.unshift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.unshift"
					}
				},
				{
					"id": 910,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 911,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of values in the array"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 560,
										"name": "MessageCommandValidatedOption"
									}
								],
								"name": "IterableIterator",
								"qualifiedName": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.values"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.values"
					}
				},
				{
					"id": 647,
					"name": "from",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 72,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 80,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 83,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 648,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an array-like object."
									}
								]
							},
							"typeParameter": [
								{
									"id": 649,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 650,
									"name": "arrayLike",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array-like object to convert to an array."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 649,
												"name": "T",
												"qualifiedName": "T",
												"package": "typescript"
											}
										],
										"name": "ArrayLike",
										"qualifiedName": "ArrayLike",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 649,
									"name": "T",
									"qualifiedName": "T",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.from"
							}
						},
						{
							"id": 651,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an iterable object."
									}
								]
							},
							"typeParameter": [
								{
									"id": 652,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 653,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 654,
									"name": "arrayLike",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array-like object to convert to an array."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 652,
												"name": "T",
												"qualifiedName": "T",
												"package": "typescript"
											}
										],
										"name": "ArrayLike",
										"qualifiedName": "ArrayLike",
										"package": "typescript"
									}
								},
								{
									"id": 655,
									"name": "mapfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mapping function to call on every element of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 656,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 80,
													"character": 47
												}
											],
											"signatures": [
												{
													"id": 657,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 658,
															"name": "v",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 652,
																"name": "T",
																"qualifiedName": "T",
																"package": "typescript"
															}
														},
														{
															"id": 659,
															"name": "k",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 653,
														"name": "U",
														"qualifiedName": "U",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 660,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value of 'this' used to invoke the mapfn."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 653,
									"name": "U",
									"qualifiedName": "U",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.from"
							}
						},
						{
							"id": 661,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an iterable object."
									}
								]
							},
							"typeParameter": [
								{
									"id": 662,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 663,
									"name": "iterable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An iterable object to convert to an array."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 662,
														"name": "T",
														"qualifiedName": "T",
														"package": "typescript"
													}
												],
												"name": "Iterable",
												"qualifiedName": "Iterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 662,
														"name": "T",
														"qualifiedName": "T",
														"package": "typescript"
													}
												],
												"name": "ArrayLike",
												"qualifiedName": "ArrayLike",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 662,
									"name": "T",
									"qualifiedName": "T",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.from"
							}
						},
						{
							"id": 664,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an iterable object."
									}
								]
							},
							"typeParameter": [
								{
									"id": 665,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 666,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 667,
									"name": "iterable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An iterable object to convert to an array."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 665,
														"name": "T",
														"qualifiedName": "T",
														"package": "typescript"
													}
												],
												"name": "Iterable",
												"qualifiedName": "Iterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 665,
														"name": "T",
														"qualifiedName": "T",
														"package": "typescript"
													}
												],
												"name": "ArrayLike",
												"qualifiedName": "ArrayLike",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 668,
									"name": "mapfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mapping function to call on every element of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 669,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
													"line": 91,
													"character": 60
												}
											],
											"signatures": [
												{
													"id": 670,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 671,
															"name": "v",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 665,
																"name": "T",
																"qualifiedName": "T",
																"package": "typescript"
															}
														},
														{
															"id": 672,
															"name": "k",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 666,
														"name": "U",
														"qualifiedName": "U",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 673,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value of 'this' used to invoke the mapfn."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 666,
									"name": "U",
									"qualifiedName": "U",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.from"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.from"
					}
				},
				{
					"id": 644,
					"name": "isArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1466,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 645,
							"name": "isArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 646,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "arg",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.isArray"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.isArray"
					}
				},
				{
					"id": 674,
					"name": "of",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 675,
							"name": "of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new array from a set of elements."
									}
								]
							},
							"typeParameter": [
								{
									"id": 676,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 677,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A set of elements to include in the new array object."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 676,
											"name": "T",
											"qualifiedName": "T",
											"package": "typescript"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 676,
									"name": "T",
									"qualifiedName": "T",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array.of"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array.of"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						679
					]
				},
				{
					"title": "Properties",
					"children": [
						696,
						678
					]
				},
				{
					"title": "Methods",
					"children": [
						934,
						936,
						946,
						706,
						901,
						906,
						748,
						896,
						794,
						868,
						887,
						928,
						916,
						775,
						682,
						689,
						912,
						740,
						711,
						908,
						744,
						784,
						701,
						703,
						812,
						840,
						714,
						716,
						718,
						766,
						722,
						729,
						699,
						697,
						737,
						910,
						647,
						644,
						674
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandOptions.ts",
					"line": 3,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandOptions.ts#L3"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 560,
							"name": "MessageCommandValidatedOption"
						}
					],
					"name": "Array",
					"qualifiedName": "Array",
					"package": "typescript"
				}
			]
		},
		{
			"id": 126,
			"name": "RecipleClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 157,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 80,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L80"
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "new RecipleClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 159,
									"name": "Ready",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"default": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"parameters": [
								{
									"id": 160,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2,
										"name": "RecipleClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client<Ready>.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client<Ready>.constructor"
					}
				},
				{
					"id": 258,
					"name": "application",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 581,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 159,
								"name": "Ready"
							},
							{
								"type": "reference",
								"name": "ClientApplication",
								"qualifiedName": "ClientApplication",
								"package": "discord.js"
							},
							{
								"type": "literal",
								"value": null
							}
						],
						"name": "If",
						"qualifiedName": "If",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.application"
					}
				},
				{
					"id": 259,
					"name": "channels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 582,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ChannelManager",
						"qualifiedName": "ChannelManager",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.channels"
					}
				},
				{
					"id": 224,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 74,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L74"
						}
					],
					"type": {
						"type": "reference",
						"id": 31,
						"name": "RecipleClientCommands"
					},
					"defaultValue": "..."
				},
				{
					"id": 223,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L73"
						}
					],
					"type": {
						"type": "reference",
						"id": 358,
						"name": "Config"
					}
				},
				{
					"id": 260,
					"name": "emojis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 583,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "BaseGuildEmojiManager",
						"qualifiedName": "BaseGuildEmojiManager",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.emojis"
					}
				},
				{
					"id": 261,
					"name": "guilds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 584,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "GuildManager",
						"qualifiedName": "GuildManager",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.guilds"
					}
				},
				{
					"id": 227,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 77,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L77"
						}
					],
					"type": {
						"type": "reference",
						"name": "Logger",
						"qualifiedName": "Logger",
						"package": "fallout-utility"
					}
				},
				{
					"id": 226,
					"name": "modules",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 76,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L76"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 995,
							"name": "RecipleModule"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 262,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 585,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ClientOptions",
						"qualifiedName": "ClientOptions",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.options"
					}
				},
				{
					"id": 225,
					"name": "otherApplicationCommandData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 75,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L75"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"id": 1007,
									"name": "interactionCommandBuilders"
								},
								{
									"type": "reference",
									"name": "ApplicationCommandDataResolvable",
									"qualifiedName": "ApplicationCommandDataResolvable",
									"package": "discord.js"
								}
							]
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 263,
					"name": "readyAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 586,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 159,
								"name": "Ready"
							},
							{
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": null
							}
						],
						"name": "If",
						"qualifiedName": "If",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.readyAt"
					}
				},
				{
					"id": 264,
					"name": "readyTimestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 587,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 159,
								"name": "Ready"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "literal",
								"value": null
							}
						],
						"name": "If",
						"qualifiedName": "If",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.readyTimestamp"
					}
				},
				{
					"id": 266,
					"name": "shard",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 589,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "ShardClientUtil",
								"qualifiedName": "ShardClientUtil",
								"package": "discord.js"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.shard"
					}
				},
				{
					"id": 265,
					"name": "sweepers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 588,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "Sweepers",
						"qualifiedName": "Sweepers",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.sweepers"
					}
				},
				{
					"id": 267,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 590,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 159,
								"name": "Ready"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "If",
						"qualifiedName": "If",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.token"
					}
				},
				{
					"id": 268,
					"name": "uptime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 591,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 159,
								"name": "Ready"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "literal",
								"value": null
							}
						],
						"name": "If",
						"qualifiedName": "If",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.uptime"
					}
				},
				{
					"id": 269,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 592,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 159,
								"name": "Ready"
							},
							{
								"type": "reference",
								"name": "ClientUser",
								"qualifiedName": "ClientUser",
								"package": "discord.js"
							},
							{
								"type": "literal",
								"value": null
							}
						],
						"name": "If",
						"qualifiedName": "If",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.user"
					}
				},
				{
					"id": 270,
					"name": "users",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 593,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "UserManager",
						"qualifiedName": "UserManager",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.users"
					}
				},
				{
					"id": 228,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 78,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "version"
				},
				{
					"id": 271,
					"name": "voice",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 594,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ClientVoiceManager",
						"qualifiedName": "ClientVoiceManager",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.voice"
					}
				},
				{
					"id": 272,
					"name": "ws",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 595,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "WebSocketManager",
						"qualifiedName": "WebSocketManager",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.ws"
					}
				},
				{
					"id": 154,
					"name": "captureRejectionSymbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 291,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 154,
							"name": "captureRejectionSymbol",
							"qualifiedName": "EventEmitter.captureRejectionSymbol",
							"package": "@types/node"
						}
					}
				},
				{
					"id": 155,
					"name": "captureRejections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets or gets the default captureRejection value for all emitters."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 296,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 156,
					"name": "defaultMaxListeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 297,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 153,
					"name": "errorMonitor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "\nevents. Listeners installed using this symbol are called before the regular\n"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted, therefore the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 290,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 153,
							"name": "errorMonitor",
							"qualifiedName": "EventEmitter.errorMonitor",
							"package": "@types/node"
						}
					}
				},
				{
					"id": 254,
					"name": "_commandExecuteError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 252,
							"character": 18,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L252"
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "_commandExecuteError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 256,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error",
										"qualifiedName": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 257,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 979,
										"name": "recipleCommandBuildersExecute"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 237,
					"name": "addCommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 152,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L152"
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "addCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 239,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 978,
										"name": "recipleCommandBuilders"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "addCommandListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 164,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L164"
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "addCommandListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							}
						}
					]
				},
				{
					"id": 310,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 317,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 311,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 312,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 313,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 314,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 317,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 315,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 316,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.addListener"
					}
				},
				{
					"id": 233,
					"name": "addModule",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 131,
							"character": 17,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L131"
						}
					],
					"signatures": [
						{
							"id": 234,
							"name": "addModule",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 235,
									"name": "script",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 984,
										"name": "RecipleScript"
									}
								},
								{
									"id": 236,
									"name": "registerCommands",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 273,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 596,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 274,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.destroy"
					}
				},
				{
					"id": 191,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L60"
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 61,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 192,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 193,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 40,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 194,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 193,
										"name": "E"
									}
								},
								{
									"id": 195,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 193,
											"name": "E"
										},
										"objectType": {
											"type": "reference",
											"id": 40,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.emit"
							}
						},
						{
							"id": 196,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 197,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 198,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 197,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 40,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 199,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.emit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.emit"
					}
				},
				{
					"id": 352,
					"name": "eventNames",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 632,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 353,
							"name": "eventNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.eventNames"
					}
				},
				{
					"id": 275,
					"name": "fetchGuildPreview",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 597,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "fetchGuildPreview",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 277,
									"name": "guild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "GuildResolvable",
										"qualifiedName": "GuildResolvable",
										"package": "discord.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "GuildPreview",
										"qualifiedName": "GuildPreview",
										"package": "discord.js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchGuildPreview"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchGuildPreview"
					}
				},
				{
					"id": 282,
					"name": "fetchGuildTemplate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 599,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "fetchGuildTemplate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 284,
									"name": "template",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "GuildTemplate",
										"qualifiedName": "GuildTemplate",
										"package": "discord.js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchGuildTemplate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchGuildTemplate"
					}
				},
				{
					"id": 296,
					"name": "fetchGuildWidget",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 604,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 297,
							"name": "fetchGuildWidget",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 298,
									"name": "guild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "GuildResolvable",
										"qualifiedName": "GuildResolvable",
										"package": "discord.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Widget",
										"qualifiedName": "Widget",
										"package": "discord.js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchGuildWidget"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchGuildWidget"
					}
				},
				{
					"id": 278,
					"name": "fetchInvite",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 598,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "fetchInvite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 280,
									"name": "invite",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 281,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "ClientFetchInviteOptions",
										"qualifiedName": "ClientFetchInviteOptions",
										"package": "discord.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Invite",
										"qualifiedName": "Invite",
										"package": "discord.js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchInvite"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchInvite"
					}
				},
				{
					"id": 290,
					"name": "fetchPremiumStickerPacks",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 602,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "fetchPremiumStickerPacks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "StickerPack",
												"qualifiedName": "StickerPack",
												"package": "discord.js"
											}
										],
										"name": "Collection",
										"qualifiedName": "Collection",
										"package": "@discordjs/collection"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchPremiumStickerPacks"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchPremiumStickerPacks"
					}
				},
				{
					"id": 287,
					"name": "fetchSticker",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 601,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 288,
							"name": "fetchSticker",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 289,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Sticker",
										"qualifiedName": "Sticker",
										"package": "discord.js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchSticker"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchSticker"
					}
				},
				{
					"id": 285,
					"name": "fetchVoiceRegions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 600,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 286,
							"name": "fetchVoiceRegions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "VoiceRegion",
												"qualifiedName": "VoiceRegion",
												"package": "discord.js"
											}
										],
										"name": "Collection",
										"qualifiedName": "Collection",
										"package": "@discordjs/collection"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchVoiceRegions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchVoiceRegions"
					}
				},
				{
					"id": 292,
					"name": "fetchWebhook",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 603,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 293,
							"name": "fetchWebhook",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 294,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 295,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Webhook",
										"qualifiedName": "Webhook",
										"package": "discord.js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchWebhook"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchWebhook"
					}
				},
				{
					"id": 299,
					"name": "generateInvite",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 605,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 300,
							"name": "generateInvite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 301,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "InviteGenerationOptions",
										"qualifiedName": "InviteGenerationOptions",
										"package": "discord.js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.generateInvite"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.generateInvite"
					}
				},
				{
					"id": 327,
					"name": "getMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 489,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 328,
							"name": "getMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 156
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.getMaxListeners"
					}
				},
				{
					"id": 249,
					"name": "getMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 248,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L248"
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "getMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 251,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 252,
									"name": "messageKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 253,
									"name": "defaultMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 251,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 251,
								"name": "T"
							}
						}
					]
				},
				{
					"id": 246,
					"name": "interactionCommandExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 222,
							"character": 17,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L222"
						}
					],
					"signatures": [
						{
							"id": 247,
							"name": "interactionCommandExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 248,
									"name": "interaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "CacheType",
														"qualifiedName": "CacheType",
														"package": "discord.js"
													}
												],
												"name": "CommandInteraction",
												"qualifiedName": "CommandInteraction",
												"package": "discord.js"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "CacheType",
														"qualifiedName": "CacheType",
														"package": "discord.js"
													}
												],
												"name": "Interaction",
												"qualifiedName": "Interaction",
												"package": "discord.js"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"id": 422,
												"name": "RecipleInteractionCommandExecute"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 221,
					"name": "isReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 69,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "isReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 126,
									"typeArguments": [
										{
											"type": "literal",
											"value": true
										}
									],
									"name": "RecipleClient"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.isReady"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.isReady"
					}
				},
				{
					"id": 335,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 579,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 336,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening to the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 337,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.listenerCount"
					}
				},
				{
					"id": 329,
					"name": "listeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 502,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 330,
							"name": "listeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 331,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function",
									"qualifiedName": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.listeners"
					}
				},
				{
					"id": 231,
					"name": "loadModules",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 103,
							"character": 17,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L103"
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "loadModules",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 126,
										"typeArguments": [
											{
												"type": "reference",
												"id": 159,
												"name": "Ready"
											}
										],
										"name": "RecipleClient"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 302,
					"name": "login",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 606,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 303,
							"name": "login",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 304,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.login"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.login"
					}
				},
				{
					"id": 242,
					"name": "messageCommandExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 171,
							"character": 17,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L171"
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "messageCommandExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 244,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Message",
										"qualifiedName": "Message",
										"package": "discord.js"
									}
								},
								{
									"id": 245,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"id": 554,
												"name": "RecipleMessageCommandExecute"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 200,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L63"
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 64,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 201,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 202,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 40,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 203,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 202,
										"name": "E"
									}
								},
								{
									"id": 204,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 205,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 63,
													"character": 65,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L63"
												}
											],
											"signatures": [
												{
													"id": 206,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 207,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 202,
																	"name": "E"
																},
																"objectType": {
																	"type": "reference",
																	"id": 40,
																	"name": "RecipleClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.off"
							}
						},
						{
							"id": 208,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 209,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 210,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 209,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 40,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 211,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 212,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 64,
													"character": 89,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L64"
												}
											],
											"signatures": [
												{
													"id": 213,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 214,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.off"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.off"
					}
				},
				{
					"id": 161,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L54"
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 162,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 163,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 40,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 164,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 163,
										"name": "E"
									}
								},
								{
									"id": 165,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 166,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 54,
													"character": 64,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L54"
												}
											],
											"signatures": [
												{
													"id": 167,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 168,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 163,
																	"name": "E"
																},
																"objectType": {
																	"type": "reference",
																	"id": 40,
																	"name": "RecipleClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.on"
							}
						},
						{
							"id": 169,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 170,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 171,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 170,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 40,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 172,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 173,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 55,
													"character": 88,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L55"
												}
											],
											"signatures": [
												{
													"id": 174,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 175,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.on"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.on"
					}
				},
				{
					"id": 176,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L57"
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L58"
						}
					],
					"signatures": [
						{
							"id": 177,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 178,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 40,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 179,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "E"
									}
								},
								{
									"id": 180,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 181,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 57,
													"character": 66,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L57"
												}
											],
											"signatures": [
												{
													"id": 182,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 183,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 178,
																	"name": "E"
																},
																"objectType": {
																	"type": "reference",
																	"id": 40,
																	"name": "RecipleClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.once"
							}
						},
						{
							"id": 184,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 185,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											},
											{
												"type": "literal",
												"value": "toString"
											},
											{
												"type": "literal",
												"value": "charAt"
											},
											{
												"type": "literal",
												"value": "charCodeAt"
											},
											{
												"type": "literal",
												"value": "concat"
											},
											{
												"type": "literal",
												"value": "indexOf"
											},
											{
												"type": "literal",
												"value": "lastIndexOf"
											},
											{
												"type": "literal",
												"value": "localeCompare"
											},
											{
												"type": "literal",
												"value": "match"
											},
											{
												"type": "literal",
												"value": "replace"
											},
											{
												"type": "literal",
												"value": "search"
											},
											{
												"type": "literal",
												"value": "slice"
											},
											{
												"type": "literal",
												"value": "split"
											},
											{
												"type": "literal",
												"value": "substring"
											},
											{
												"type": "literal",
												"value": "toLowerCase"
											},
											{
												"type": "literal",
												"value": "toLocaleLowerCase"
											},
											{
												"type": "literal",
												"value": "toUpperCase"
											},
											{
												"type": "literal",
												"value": "toLocaleUpperCase"
											},
											{
												"type": "literal",
												"value": "trim"
											},
											{
												"type": "literal",
												"value": "length"
											},
											{
												"type": "literal",
												"value": "substr"
											},
											{
												"type": "literal",
												"value": "valueOf"
											},
											{
												"type": "literal",
												"value": "codePointAt"
											},
											{
												"type": "literal",
												"value": "includes"
											},
											{
												"type": "literal",
												"value": "endsWith"
											},
											{
												"type": "literal",
												"value": "normalize"
											},
											{
												"type": "literal",
												"value": "repeat"
											},
											{
												"type": "literal",
												"value": "startsWith"
											},
											{
												"type": "literal",
												"value": "anchor"
											},
											{
												"type": "literal",
												"value": "big"
											},
											{
												"type": "literal",
												"value": "blink"
											},
											{
												"type": "literal",
												"value": "bold"
											},
											{
												"type": "literal",
												"value": "fixed"
											},
											{
												"type": "literal",
												"value": "fontcolor"
											},
											{
												"type": "literal",
												"value": "fontsize"
											},
											{
												"type": "literal",
												"value": "italics"
											},
											{
												"type": "literal",
												"value": "link"
											},
											{
												"type": "literal",
												"value": "small"
											},
											{
												"type": "literal",
												"value": "strike"
											},
											{
												"type": "literal",
												"value": "sub"
											},
											{
												"type": "literal",
												"value": "sup"
											},
											{
												"type": "literal",
												"value": "padStart"
											},
											{
												"type": "literal",
												"value": "padEnd"
											},
											{
												"type": "literal",
												"value": "trimEnd"
											},
											{
												"type": "literal",
												"value": "trimStart"
											},
											{
												"type": "literal",
												"value": "trimLeft"
											},
											{
												"type": "literal",
												"value": "trimRight"
											},
											{
												"type": "literal",
												"value": "matchAll"
											},
											{
												"type": "literal",
												"value": "at"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 186,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 185,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 40,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 187,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 188,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 58,
													"character": 96,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L58"
												}
											],
											"signatures": [
												{
													"id": 189,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 190,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.once"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.once"
					}
				},
				{
					"id": 338,
					"name": "prependListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 597,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "prependListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 340,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 341,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 342,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 597,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 343,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 344,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.prependListener"
					}
				},
				{
					"id": 345,
					"name": "prependOnceListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 613,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 346,
							"name": "prependOnceListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the_beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 347,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 348,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 349,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 613,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 350,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 351,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.prependOnceListener"
					}
				},
				{
					"id": 332,
					"name": "rawListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 532,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 333,
							"name": "rawListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 334,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function",
									"qualifiedName": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.rawListeners"
					}
				},
				{
					"id": 215,
					"name": "removeAllListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 66,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L66"
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 67,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L67"
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 217,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 40,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 218,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.removeAllListeners"
							}
						},
						{
							"id": 219,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 220,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.removeAllListeners"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.removeAllListeners"
					}
				},
				{
					"id": 317,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 457,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 318,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and_before_ the last listener finishes execution will\nnot remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 319,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 320,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 321,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 457,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 322,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 323,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.removeListener"
					}
				},
				{
					"id": 324,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 483,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 325,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 326,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "reference",
										"id": 159,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.setMaxListeners"
					}
				},
				{
					"id": 229,
					"name": "startModules",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 93,
							"character": 17,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L93"
						}
					],
					"signatures": [
						{
							"id": 230,
							"name": "startModules",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 126,
										"typeArguments": [
											{
												"type": "reference",
												"id": 159,
												"name": "Ready"
											}
										],
										"name": "RecipleClient"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 305,
					"name": "sweepMessages",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 609,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 306,
							"name": "sweepMessages",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Sweepers#sweepMessages"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 307,
									"name": "lifetime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.sweepMessages"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.sweepMessages"
					}
				},
				{
					"id": 308,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 610,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 309,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.toJSON"
					}
				},
				{
					"id": 145,
					"name": "getEventListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 262,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "getEventListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 147,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "EventEmitter",
												"qualifiedName": "global.NodeJS.EventEmitter",
												"package": "@types/node"
											},
											{
												"type": "reference",
												"name": "DOMEventTarget",
												"qualifiedName": "DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 148,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function",
									"qualifiedName": "Function",
									"package": "typescript"
								}
							}
						}
					]
				},
				{
					"id": 141,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 234,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 143,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter",
										"qualifiedName": "global.NodeJS.EventEmitter",
										"package": "@types/node"
									}
								},
								{
									"id": 144,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.listenerCount"
					}
				},
				{
					"id": 136,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 217,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 137,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 138,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter",
										"qualifiedName": "global.NodeJS.EventEmitter",
										"package": "@types/node"
									}
								},
								{
									"id": 139,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 140,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"qualifiedName": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.on"
					}
				},
				{
					"id": 127,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 157,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 158,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 128,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 129,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "NodeEventTarget",
										"qualifiedName": "NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 130,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 131,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.once"
							}
						},
						{
							"id": 132,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 133,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "DOMEventTarget",
										"qualifiedName": "DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 134,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 135,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.once"
					}
				},
				{
					"id": 149,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 280,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 151,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 152,
									"name": "eventTargets",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"name": "EventEmitter",
													"qualifiedName": "global.NodeJS.EventEmitter",
													"package": "@types/node"
												},
												{
													"type": "reference",
													"name": "DOMEventTarget",
													"qualifiedName": "DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						157
					]
				},
				{
					"title": "Properties",
					"children": [
						258,
						259,
						224,
						223,
						260,
						261,
						227,
						226,
						262,
						225,
						263,
						264,
						266,
						265,
						267,
						268,
						269,
						270,
						228,
						271,
						272,
						154,
						155,
						156,
						153
					]
				},
				{
					"title": "Methods",
					"children": [
						254,
						237,
						240,
						310,
						233,
						273,
						191,
						352,
						275,
						282,
						296,
						278,
						290,
						287,
						285,
						292,
						299,
						327,
						249,
						246,
						221,
						335,
						329,
						231,
						302,
						242,
						200,
						161,
						176,
						338,
						345,
						332,
						215,
						317,
						324,
						229,
						305,
						308,
						145,
						141,
						136,
						127,
						149
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 53,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L53"
				},
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 72,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L72"
				}
			],
			"typeParameters": [
				{
					"id": 354,
					"name": "Ready",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"default": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 159,
							"name": "Ready"
						}
					],
					"name": "Client",
					"qualifiedName": "Client",
					"package": "discord.js"
				}
			]
		},
		{
			"id": 405,
			"name": "RecipleConfig",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 406,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 67,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L67"
						}
					],
					"signatures": [
						{
							"id": 407,
							"name": "new RecipleConfig",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 408,
									"name": "configPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 405,
								"name": "RecipleConfig"
							}
						}
					]
				},
				{
					"id": 409,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 64,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L64"
						}
					],
					"type": {
						"type": "reference",
						"id": 358,
						"name": "Config"
					}
				},
				{
					"id": 410,
					"name": "configPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 65,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L65"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'./reciple.yml'"
				},
				{
					"id": 420,
					"name": "askToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 129,
							"character": 12,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L129"
						}
					],
					"signatures": [
						{
							"id": 421,
							"name": "askToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 413,
					"name": "getConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 101,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L101"
						}
					],
					"signatures": [
						{
							"id": 414,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 358,
								"name": "Config"
							}
						}
					]
				},
				{
					"id": 418,
					"name": "isSupportedConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 125,
							"character": 12,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 419,
							"name": "isSupportedConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 411,
					"name": "parseConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 72,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L72"
						}
					],
					"signatures": [
						{
							"id": 412,
							"name": "parseConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 405,
								"name": "RecipleConfig"
							}
						}
					]
				},
				{
					"id": 415,
					"name": "parseToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 108,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L108"
						}
					],
					"signatures": [
						{
							"id": 416,
							"name": "parseToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 417,
									"name": "askIfNull",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						406
					]
				},
				{
					"title": "Properties",
					"children": [
						409,
						410
					]
				},
				{
					"title": "Methods",
					"children": [
						420,
						413,
						418,
						411,
						415
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/Config.ts",
					"line": 63,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L63"
				}
			]
		},
		{
			"id": 984,
			"name": "RecipleScript",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 985,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 986,
							"name": "new RecipleScript",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 984,
								"name": "RecipleScript"
							}
						}
					]
				},
				{
					"id": 988,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 16,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L16"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 978,
							"name": "recipleCommandBuilders"
						}
					}
				},
				{
					"id": 987,
					"name": "versions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 989,
					"name": "onLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 17,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L17"
						}
					],
					"signatures": [
						{
							"id": 990,
							"name": "onLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 991,
									"name": "reciple",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 126,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "RecipleClient"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 992,
					"name": "onStart",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 993,
							"name": "onStart",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 994,
									"name": "reciple",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 126,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "RecipleClient"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						985
					]
				},
				{
					"title": "Properties",
					"children": [
						988,
						987
					]
				},
				{
					"title": "Methods",
					"children": [
						989,
						992
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 14,
					"character": 21,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L14"
				}
			]
		},
		{
			"id": 358,
			"name": "Config",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 397,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L54"
						}
					],
					"type": {
						"type": "reference",
						"name": "ClientOptions",
						"qualifiedName": "ClientOptions",
						"package": "discord.js"
					}
				},
				{
					"id": 361,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L18"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 362,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 369,
									"name": "interactionCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 25,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L25"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 370,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 371,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 26,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L26"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 375,
													"name": "guilds",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 30,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L30"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 373,
													"name": "registerCommands",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 28,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L28"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 372,
													"name": "replyOnError",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 27,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L27"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 374,
													"name": "setRequiredPermissions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 29,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L29"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														371,
														375,
														373,
														372,
														374
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 25,
													"character": 28,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L25"
												}
											]
										}
									}
								},
								{
									"id": 363,
									"name": "messageCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 19,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L19"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 364,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 367,
													"name": "allowCommandAlias",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 22,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L22"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 368,
													"name": "commandArgumentSeparator",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 23,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L23"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 365,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 20,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L20"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 366,
													"name": "replyOnError",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 21,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L21"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														367,
														368,
														365,
														366
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 19,
													"character": 24,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L19"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										369,
										363
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/classes/Config.ts",
									"line": 18,
									"character": 14,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L18"
								}
							]
						}
					}
				},
				{
					"id": 391,
					"name": "fileLogging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L48"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 392,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 394,
									"name": "debugmode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 50,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L50"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 393,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 49,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L49"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 396,
									"name": "logFilePath",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 52,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 395,
									"name": "stringifyLoggedJSON",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 51,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L51"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										394,
										393,
										396,
										395
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/classes/Config.ts",
									"line": 48,
									"character": 17,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L48"
								}
							]
						}
					}
				},
				{
					"id": 386,
					"name": "ignoredChannels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L43"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 387,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 390,
									"name": "channels",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 46,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L46"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 389,
									"name": "convertToAllowList",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 45,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L45"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 388,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 44,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L44"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										390,
										389,
										388
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/classes/Config.ts",
									"line": 43,
									"character": 21,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L43"
								}
							]
						}
					}
				},
				{
					"id": 402,
					"name": "ignoredFiles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L58"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 398,
					"name": "messages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L55"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 399,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/Config.ts",
									"line": 55,
									"character": 14,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L55"
								}
							],
							"indexSignature": {
								"id": 400,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 401,
										"name": "messageKey",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 403,
					"name": "modulesFolder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 59,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L59"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 376,
					"name": "permissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L33"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 377,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 382,
									"name": "interactionCommands",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 38,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L38"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 383,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 385,
													"name": "commands",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 40,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L40"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 355,
															"name": "ConfigCommandPermissions"
														}
													}
												},
												{
													"id": 384,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 39,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L39"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														385,
														384
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 38,
													"character": 29,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L38"
												}
											]
										}
									}
								},
								{
									"id": 378,
									"name": "messageCommands",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 34,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L34"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 379,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 381,
													"name": "commands",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 36,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L36"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 355,
															"name": "ConfigCommandPermissions"
														}
													}
												},
												{
													"id": 380,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 35,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L35"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														381,
														380
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 34,
													"character": 25,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L34"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										382,
										378
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/classes/Config.ts",
									"line": 33,
									"character": 17,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L33"
								}
							]
						}
					}
				},
				{
					"id": 360,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 359,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 404,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						397,
						361,
						391,
						386,
						402,
						398,
						403,
						376,
						360,
						359,
						404
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/Config.ts",
					"line": 15,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L15"
				}
			]
		},
		{
			"id": 355,
			"name": "ConfigCommandPermissions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 356,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 357,
					"name": "permissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/Config.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L12"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "PermissionString",
									"qualifiedName": "PermissionString",
									"package": "discord.js"
								},
								{
									"type": "reference",
									"name": "PermissionFlags",
									"qualifiedName": "PermissionFlags",
									"package": "discord.js"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						356,
						357
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/Config.ts",
					"line": 10,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L10"
				}
			]
		},
		{
			"id": 560,
			"name": "MessageCommandValidatedOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 564,
					"name": "invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 565,
					"name": "missing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 561,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 563,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 562,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L18"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						564,
						565,
						561,
						563,
						562
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
					"line": 16,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L16"
				}
			]
		},
		{
			"id": 31,
			"name": "RecipleClientCommands",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 36,
					"name": "INTERACTION_COMMANDS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L45"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleClient.ts",
									"line": 45,
									"character": 26,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L45"
								}
							],
							"indexSignature": {
								"id": 38,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 39,
										"name": "commandName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 427,
									"name": "InteractionCommandBuilder"
								}
							}
						}
					}
				},
				{
					"id": 32,
					"name": "MESSAGE_COMMANDS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L44"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleClient.ts",
									"line": 44,
									"character": 22,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L44"
								}
							],
							"indexSignature": {
								"id": 34,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 35,
										"name": "commandName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 566,
									"name": "MessageCommandBuilder"
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36,
						32
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 43,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L43"
				}
			]
		},
		{
			"id": 40,
			"name": "RecipleClientEvents",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 122,
					"name": "apiRequest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4133,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "request",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "APIRequest",
									"qualifiedName": "APIRequest",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.apiRequest"
					}
				},
				{
					"id": 121,
					"name": "apiResponse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4132,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "request",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "APIRequest",
									"qualifiedName": "APIRequest",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "response",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Response",
									"qualifiedName": "Response",
									"package": "@types/node-fetch"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.apiResponse"
					}
				},
				{
					"id": 43,
					"name": "applicationCommandCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "See [this issue](https://github.com/discord/discord-api-docs/issues/3690) for more information."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4141,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "command",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reflection",
											"declaration": {
												"id": 44,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {}
											}
										}
									],
									"name": "ApplicationCommand",
									"qualifiedName": "ApplicationCommand",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.applicationCommandCreate"
					}
				},
				{
					"id": 45,
					"name": "applicationCommandDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "See [this issue](https://github.com/discord/discord-api-docs/issues/3690) for more information."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4143,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "command",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reflection",
											"declaration": {
												"id": 46,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {}
											}
										}
									],
									"name": "ApplicationCommand",
									"qualifiedName": "ApplicationCommand",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.applicationCommandDelete"
					}
				},
				{
					"id": 47,
					"name": "applicationCommandUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "See [this issue](https://github.com/discord/discord-api-docs/issues/3690) for more information."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4145,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldCommand",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reflection",
													"declaration": {
														"id": 48,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {}
													}
												}
											],
											"name": "ApplicationCommand",
											"qualifiedName": "ApplicationCommand",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newCommand",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reflection",
											"declaration": {
												"id": 49,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {}
											}
										}
									],
									"name": "ApplicationCommand",
									"qualifiedName": "ApplicationCommand",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.applicationCommandUpdate"
					}
				},
				{
					"id": 50,
					"name": "cacheSweep",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4146,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.cacheSweep"
					}
				},
				{
					"id": 51,
					"name": "channelCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4147,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "channel",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "NonThreadGuildBasedChannel",
									"qualifiedName": "NonThreadGuildBasedChannel",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.channelCreate"
					}
				},
				{
					"id": 52,
					"name": "channelDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4148,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "channel",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "DMChannel",
											"qualifiedName": "DMChannel",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "NonThreadGuildBasedChannel",
											"qualifiedName": "NonThreadGuildBasedChannel",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.channelDelete"
					}
				},
				{
					"id": 53,
					"name": "channelPinsUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4149,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "channel",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "TextBasedChannel",
									"qualifiedName": "TextBasedChannel",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "date",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Date",
									"qualifiedName": "Date",
									"package": "typescript"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.channelPinsUpdate"
					}
				},
				{
					"id": 54,
					"name": "channelUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4150,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldChannel",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "DMChannel",
											"qualifiedName": "DMChannel",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "NonThreadGuildBasedChannel",
											"qualifiedName": "NonThreadGuildBasedChannel",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newChannel",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "DMChannel",
											"qualifiedName": "DMChannel",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "NonThreadGuildBasedChannel",
											"qualifiedName": "NonThreadGuildBasedChannel",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.channelUpdate"
					}
				},
				{
					"id": 123,
					"name": "debug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4134,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.debug"
					}
				},
				{
					"id": 56,
					"name": "emojiCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4155,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "emoji",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildEmoji",
									"qualifiedName": "GuildEmoji",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.emojiCreate"
					}
				},
				{
					"id": 57,
					"name": "emojiDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4156,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "emoji",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildEmoji",
									"qualifiedName": "GuildEmoji",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.emojiDelete"
					}
				},
				{
					"id": 58,
					"name": "emojiUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4157,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldEmoji",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildEmoji",
									"qualifiedName": "GuildEmoji",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newEmoji",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildEmoji",
									"qualifiedName": "GuildEmoji",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.emojiUpdate"
					}
				},
				{
					"id": 59,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4158,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "error",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Error",
									"qualifiedName": "Error",
									"package": "typescript"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.error"
					}
				},
				{
					"id": 60,
					"name": "guildBanAdd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4159,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "ban",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildBan",
									"qualifiedName": "GuildBan",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildBanAdd"
					}
				},
				{
					"id": 61,
					"name": "guildBanRemove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4160,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "ban",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildBan",
									"qualifiedName": "GuildBan",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildBanRemove"
					}
				},
				{
					"id": 62,
					"name": "guildCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4161,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guild",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Guild",
									"qualifiedName": "Guild",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildCreate"
					}
				},
				{
					"id": 63,
					"name": "guildDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4162,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guild",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Guild",
									"qualifiedName": "Guild",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildDelete"
					}
				},
				{
					"id": 65,
					"name": "guildIntegrationsUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4164,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guild",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Guild",
									"qualifiedName": "Guild",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildIntegrationsUpdate"
					}
				},
				{
					"id": 66,
					"name": "guildMemberAdd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4165,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "member",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildMember",
									"qualifiedName": "GuildMember",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildMemberAdd"
					}
				},
				{
					"id": 67,
					"name": "guildMemberAvailable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4166,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "member",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "GuildMember",
											"qualifiedName": "GuildMember",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialGuildMember",
											"qualifiedName": "PartialGuildMember",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildMemberAvailable"
					}
				},
				{
					"id": 68,
					"name": "guildMemberRemove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4167,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "member",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "GuildMember",
											"qualifiedName": "GuildMember",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialGuildMember",
											"qualifiedName": "PartialGuildMember",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildMemberRemove"
					}
				},
				{
					"id": 74,
					"name": "guildMemberUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4173,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldMember",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "GuildMember",
											"qualifiedName": "GuildMember",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialGuildMember",
											"qualifiedName": "PartialGuildMember",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newMember",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "GuildMember",
									"qualifiedName": "GuildMember",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildMemberUpdate"
					}
				},
				{
					"id": 69,
					"name": "guildMembersChunk",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4168,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "members",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"name": "GuildMember",
											"qualifiedName": "GuildMember",
											"package": "discord.js"
										}
									],
									"name": "Collection",
									"qualifiedName": "Collection",
									"package": "@discordjs/collection"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "guild",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Guild",
									"qualifiedName": "Guild",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "data",
								"isOptional": false,
								"element": {
									"type": "reflection",
									"declaration": {
										"id": 70,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 71,
												"name": "count",
												"kind": 1024,
												"kindString": "Property",
												"flags": {
													"isExternal": true
												},
												"sources": [
													{
														"fileName": "node_modules/discord.js/typings/index.d.ts",
														"line": 4171,
														"character": 12
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 72,
												"name": "index",
												"kind": 1024,
												"kindString": "Property",
												"flags": {
													"isExternal": true
												},
												"sources": [
													{
														"fileName": "node_modules/discord.js/typings/index.d.ts",
														"line": 4171,
														"character": 27
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 73,
												"name": "nonce",
												"kind": 1024,
												"kindString": "Property",
												"flags": {
													"isExternal": true
												},
												"sources": [
													{
														"fileName": "node_modules/discord.js/typings/index.d.ts",
														"line": 4171,
														"character": 42
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "undefined"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													71,
													72,
													73
												]
											}
										],
										"sources": [
											{
												"fileName": "node_modules/discord.js/typings/index.d.ts",
												"line": 4171,
												"character": 10
											}
										]
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildMembersChunk"
					}
				},
				{
					"id": 116,
					"name": "guildScheduledEventCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4223,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guildScheduledEvent",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "SCHEDULED"
												},
												{
													"type": "literal",
													"value": "ACTIVE"
												},
												{
													"type": "literal",
													"value": "COMPLETED"
												},
												{
													"type": "literal",
													"value": "CANCELED"
												}
											]
										}
									],
									"name": "GuildScheduledEvent",
									"qualifiedName": "GuildScheduledEvent",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildScheduledEventCreate"
					}
				},
				{
					"id": 118,
					"name": "guildScheduledEventDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4225,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guildScheduledEvent",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "SCHEDULED"
												},
												{
													"type": "literal",
													"value": "ACTIVE"
												},
												{
													"type": "literal",
													"value": "COMPLETED"
												},
												{
													"type": "literal",
													"value": "CANCELED"
												}
											]
										}
									],
									"name": "GuildScheduledEvent",
									"qualifiedName": "GuildScheduledEvent",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildScheduledEventDelete"
					}
				},
				{
					"id": 117,
					"name": "guildScheduledEventUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4224,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldGuildScheduledEvent",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "SCHEDULED"
												},
												{
													"type": "literal",
													"value": "ACTIVE"
												},
												{
													"type": "literal",
													"value": "COMPLETED"
												},
												{
													"type": "literal",
													"value": "CANCELED"
												}
											]
										}
									],
									"name": "GuildScheduledEvent",
									"qualifiedName": "GuildScheduledEvent",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newGuildScheduledEvent",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "SCHEDULED"
												},
												{
													"type": "literal",
													"value": "ACTIVE"
												},
												{
													"type": "literal",
													"value": "COMPLETED"
												},
												{
													"type": "literal",
													"value": "CANCELED"
												}
											]
										}
									],
									"name": "GuildScheduledEvent",
									"qualifiedName": "GuildScheduledEvent",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildScheduledEventUpdate"
					}
				},
				{
					"id": 119,
					"name": "guildScheduledEventUserAdd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4226,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guildScheduledEvent",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "SCHEDULED"
												},
												{
													"type": "literal",
													"value": "ACTIVE"
												},
												{
													"type": "literal",
													"value": "COMPLETED"
												},
												{
													"type": "literal",
													"value": "CANCELED"
												}
											]
										}
									],
									"name": "GuildScheduledEvent",
									"qualifiedName": "GuildScheduledEvent",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "user",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "User",
									"qualifiedName": "User",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildScheduledEventUserAdd"
					}
				},
				{
					"id": 120,
					"name": "guildScheduledEventUserRemove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4227,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guildScheduledEvent",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "SCHEDULED"
												},
												{
													"type": "literal",
													"value": "ACTIVE"
												},
												{
													"type": "literal",
													"value": "COMPLETED"
												},
												{
													"type": "literal",
													"value": "CANCELED"
												}
											]
										}
									],
									"name": "GuildScheduledEvent",
									"qualifiedName": "GuildScheduledEvent",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "user",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "User",
									"qualifiedName": "User",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildScheduledEventUserRemove"
					}
				},
				{
					"id": 64,
					"name": "guildUnavailable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4163,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "guild",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Guild",
									"qualifiedName": "Guild",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildUnavailable"
					}
				},
				{
					"id": 75,
					"name": "guildUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4174,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldGuild",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Guild",
									"qualifiedName": "Guild",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newGuild",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Guild",
									"qualifiedName": "Guild",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.guildUpdate"
					}
				},
				{
					"id": 103,
					"name": "interaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use interactionCreate instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4210,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "interaction",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "CacheType",
											"qualifiedName": "CacheType",
											"package": "discord.js"
										}
									],
									"name": "Interaction",
									"qualifiedName": "Interaction",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.interaction"
					}
				},
				{
					"id": 104,
					"name": "interactionCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4211,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "interaction",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "CacheType",
											"qualifiedName": "CacheType",
											"package": "discord.js"
										}
									],
									"name": "Interaction",
									"qualifiedName": "Interaction",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.interactionCreate"
					}
				},
				{
					"id": 125,
					"name": "invalidRequestWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4136,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "invalidRequestWarningData",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "InvalidRequestWarningData",
									"qualifiedName": "InvalidRequestWarningData",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.invalidRequestWarning"
					}
				},
				{
					"id": 89,
					"name": "invalidated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4192,
							"character": 2
						}
					],
					"type": {
						"type": "tuple"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.invalidated"
					}
				},
				{
					"id": 76,
					"name": "inviteCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4175,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "invite",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Invite",
									"qualifiedName": "Invite",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.inviteCreate"
					}
				},
				{
					"id": 77,
					"name": "inviteDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4176,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "invite",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Invite",
									"qualifiedName": "Invite",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.inviteDelete"
					}
				},
				{
					"id": 78,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use messageCreate instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4178,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "boolean"
										}
									],
									"name": "Message",
									"qualifiedName": "Message",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.message"
					}
				},
				{
					"id": 79,
					"name": "messageCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4179,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "boolean"
										}
									],
									"name": "Message",
									"qualifiedName": "Message",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageCreate"
					}
				},
				{
					"id": 80,
					"name": "messageDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4180,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											],
											"name": "Message",
											"qualifiedName": "Message",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialMessage",
											"qualifiedName": "PartialMessage",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageDelete"
					}
				},
				{
					"id": 83,
					"name": "messageDeleteBulk",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4186,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "messages",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Message",
													"qualifiedName": "Message",
													"package": "discord.js"
												},
												{
													"type": "reference",
													"name": "PartialMessage",
													"qualifiedName": "PartialMessage",
													"package": "discord.js"
												}
											]
										}
									],
									"name": "Collection",
									"qualifiedName": "Collection",
									"package": "@discordjs/collection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageDeleteBulk"
					}
				},
				{
					"id": 84,
					"name": "messageReactionAdd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4187,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "reaction",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "MessageReaction",
											"qualifiedName": "MessageReaction",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialMessageReaction",
											"qualifiedName": "PartialMessageReaction",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "user",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "User",
											"qualifiedName": "User",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialUser",
											"qualifiedName": "PartialUser",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageReactionAdd"
					}
				},
				{
					"id": 85,
					"name": "messageReactionRemove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4188,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "reaction",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "MessageReaction",
											"qualifiedName": "MessageReaction",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialMessageReaction",
											"qualifiedName": "PartialMessageReaction",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "user",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "User",
											"qualifiedName": "User",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialUser",
											"qualifiedName": "PartialUser",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageReactionRemove"
					}
				},
				{
					"id": 81,
					"name": "messageReactionRemoveAll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4181,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											],
											"name": "Message",
											"qualifiedName": "Message",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialMessage",
											"qualifiedName": "PartialMessage",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "reactions",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"name": "MessageReaction",
											"qualifiedName": "MessageReaction",
											"package": "discord.js"
										}
									],
									"name": "Collection",
									"qualifiedName": "Collection",
									"package": "@discordjs/collection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageReactionRemoveAll"
					}
				},
				{
					"id": 82,
					"name": "messageReactionRemoveEmoji",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4185,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "reaction",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "MessageReaction",
											"qualifiedName": "MessageReaction",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialMessageReaction",
											"qualifiedName": "PartialMessageReaction",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageReactionRemoveEmoji"
					}
				},
				{
					"id": 86,
					"name": "messageUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4189,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldMessage",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											],
											"name": "Message",
											"qualifiedName": "Message",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialMessage",
											"qualifiedName": "PartialMessage",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newMessage",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											],
											"name": "Message",
											"qualifiedName": "Message",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialMessage",
											"qualifiedName": "PartialMessage",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.messageUpdate"
					}
				},
				{
					"id": 87,
					"name": "presenceUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4190,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldPresence",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"name": "Presence",
											"qualifiedName": "Presence",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newPresence",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Presence",
									"qualifiedName": "Presence",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.presenceUpdate"
					}
				},
				{
					"id": 124,
					"name": "rateLimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4135,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "rateLimitData",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "RateLimitData",
									"qualifiedName": "RateLimitData",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.rateLimit"
					}
				},
				{
					"id": 88,
					"name": "ready",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4191,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "client",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "literal",
											"value": true
										}
									],
									"name": "Client",
									"qualifiedName": "Client",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.ready"
					}
				},
				{
					"id": 42,
					"name": "recipleInteractionCommandCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L50"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "command",
								"isOptional": false,
								"element": {
									"type": "reference",
									"id": 422,
									"name": "RecipleInteractionCommandExecute"
								}
							}
						]
					}
				},
				{
					"id": 41,
					"name": "recipleMessageCommandCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L49"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "command",
								"isOptional": false,
								"element": {
									"type": "reference",
									"id": 554,
									"name": "RecipleMessageCommandExecute"
								}
							}
						]
					}
				},
				{
					"id": 90,
					"name": "roleCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4193,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "role",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Role",
									"qualifiedName": "Role",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.roleCreate"
					}
				},
				{
					"id": 91,
					"name": "roleDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4194,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "role",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Role",
									"qualifiedName": "Role",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.roleDelete"
					}
				},
				{
					"id": 92,
					"name": "roleUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4195,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldRole",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Role",
									"qualifiedName": "Role",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newRole",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Role",
									"qualifiedName": "Role",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.roleUpdate"
					}
				},
				{
					"id": 105,
					"name": "shardDisconnect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4212,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "closeEvent",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "CloseEvent",
									"qualifiedName": "CloseEvent",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "shardId",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.shardDisconnect"
					}
				},
				{
					"id": 106,
					"name": "shardError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4213,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "error",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Error",
									"qualifiedName": "Error",
									"package": "typescript"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "shardId",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.shardError"
					}
				},
				{
					"id": 107,
					"name": "shardReady",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4214,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "shardId",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "unavailableGuilds",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"name": "Set",
									"qualifiedName": "Set",
									"package": "typescript"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.shardReady"
					}
				},
				{
					"id": 108,
					"name": "shardReconnecting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4215,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "shardId",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.shardReconnecting"
					}
				},
				{
					"id": 109,
					"name": "shardResume",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4216,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "shardId",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "replayedEvents",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.shardResume"
					}
				},
				{
					"id": 110,
					"name": "stageInstanceCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4217,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "stageInstance",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "StageInstance",
									"qualifiedName": "StageInstance",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.stageInstanceCreate"
					}
				},
				{
					"id": 112,
					"name": "stageInstanceDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4219,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "stageInstance",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "StageInstance",
									"qualifiedName": "StageInstance",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.stageInstanceDelete"
					}
				},
				{
					"id": 111,
					"name": "stageInstanceUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4218,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldStageInstance",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"name": "StageInstance",
											"qualifiedName": "StageInstance",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newStageInstance",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "StageInstance",
									"qualifiedName": "StageInstance",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.stageInstanceUpdate"
					}
				},
				{
					"id": 113,
					"name": "stickerCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4220,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "sticker",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Sticker",
									"qualifiedName": "Sticker",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.stickerCreate"
					}
				},
				{
					"id": 114,
					"name": "stickerDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4221,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "sticker",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Sticker",
									"qualifiedName": "Sticker",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.stickerDelete"
					}
				},
				{
					"id": 115,
					"name": "stickerUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4222,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldSticker",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Sticker",
									"qualifiedName": "Sticker",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newSticker",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Sticker",
									"qualifiedName": "Sticker",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.stickerUpdate"
					}
				},
				{
					"id": 93,
					"name": "threadCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4196,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "thread",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "ThreadChannel",
									"qualifiedName": "ThreadChannel",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newlyCreated",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.threadCreate"
					}
				},
				{
					"id": 94,
					"name": "threadDelete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4197,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "thread",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "ThreadChannel",
									"qualifiedName": "ThreadChannel",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.threadDelete"
					}
				},
				{
					"id": 95,
					"name": "threadListSync",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4198,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "threads",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"name": "ThreadChannel",
											"qualifiedName": "ThreadChannel",
											"package": "discord.js"
										}
									],
									"name": "Collection",
									"qualifiedName": "Collection",
									"package": "@discordjs/collection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.threadListSync"
					}
				},
				{
					"id": 96,
					"name": "threadMemberUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4199,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldMember",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "ThreadMember",
									"qualifiedName": "ThreadMember",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newMember",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "ThreadMember",
									"qualifiedName": "ThreadMember",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.threadMemberUpdate"
					}
				},
				{
					"id": 97,
					"name": "threadMembersUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4200,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldMembers",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"name": "ThreadMember",
											"qualifiedName": "ThreadMember",
											"package": "discord.js"
										}
									],
									"name": "Collection",
									"qualifiedName": "Collection",
									"package": "@discordjs/collection"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newMembers",
								"isOptional": false,
								"element": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"name": "ThreadMember",
											"qualifiedName": "ThreadMember",
											"package": "discord.js"
										}
									],
									"name": "Collection",
									"qualifiedName": "Collection",
									"package": "@discordjs/collection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.threadMembersUpdate"
					}
				},
				{
					"id": 98,
					"name": "threadUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4204,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldThread",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "ThreadChannel",
									"qualifiedName": "ThreadChannel",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newThread",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "ThreadChannel",
									"qualifiedName": "ThreadChannel",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.threadUpdate"
					}
				},
				{
					"id": 99,
					"name": "typingStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4205,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "typing",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "Typing",
									"qualifiedName": "Typing",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.typingStart"
					}
				},
				{
					"id": 100,
					"name": "userUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4206,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldUser",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "User",
											"qualifiedName": "User",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "PartialUser",
											"qualifiedName": "PartialUser",
											"package": "discord.js"
										}
									]
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newUser",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "User",
									"qualifiedName": "User",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.userUpdate"
					}
				},
				{
					"id": 101,
					"name": "voiceStateUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4207,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "oldState",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "VoiceState",
									"qualifiedName": "VoiceState",
									"package": "discord.js"
								}
							},
							{
								"type": "named-tuple-member",
								"name": "newState",
								"isOptional": false,
								"element": {
									"type": "reference",
									"name": "VoiceState",
									"qualifiedName": "VoiceState",
									"package": "discord.js"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.voiceStateUpdate"
					}
				},
				{
					"id": 55,
					"name": "warn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4154,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.warn"
					}
				},
				{
					"id": 102,
					"name": "webhookUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4208,
							"character": 2
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "channel",
								"isOptional": false,
								"element": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "NewsChannel",
											"qualifiedName": "NewsChannel",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "TextChannel",
											"qualifiedName": "TextChannel",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "VoiceChannel",
											"qualifiedName": "VoiceChannel",
											"package": "discord.js"
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientEvents.webhookUpdate"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						122,
						121,
						43,
						45,
						47,
						50,
						51,
						52,
						53,
						54,
						123,
						56,
						57,
						58,
						59,
						60,
						61,
						62,
						63,
						65,
						66,
						67,
						68,
						74,
						69,
						116,
						118,
						117,
						119,
						120,
						64,
						75,
						103,
						104,
						125,
						89,
						76,
						77,
						78,
						79,
						80,
						83,
						84,
						85,
						81,
						82,
						86,
						87,
						124,
						88,
						42,
						41,
						90,
						91,
						92,
						105,
						106,
						107,
						108,
						109,
						110,
						112,
						111,
						113,
						114,
						115,
						93,
						94,
						95,
						96,
						97,
						98,
						99,
						100,
						101,
						55,
						102
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 48,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L48"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ClientEvents",
					"qualifiedName": "ClientEvents",
					"package": "discord.js"
				}
			]
		},
		{
			"id": 2,
			"name": "RecipleClientOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 10,
					"name": "allowedMentions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4243,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "MessageMentionOptions",
						"qualifiedName": "MessageMentionOptions",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.allowedMentions"
					}
				},
				{
					"id": 6,
					"name": "closeTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4237,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.closeTimeout"
					}
				},
				{
					"id": 3,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L40"
						}
					],
					"type": {
						"type": "reference",
						"id": 358,
						"name": "Config"
					}
				},
				{
					"id": 19,
					"name": "failIfNotExists",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4252,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.failIfNotExists"
					}
				},
				{
					"id": 26,
					"name": "http",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4259,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "HTTPOptions",
						"qualifiedName": "HTTPOptions",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.http"
					}
				},
				{
					"id": 22,
					"name": "intents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4255,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "IntentsString",
								"qualifiedName": "IntentsString",
								"package": "discord.js"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "BitFieldResolvable",
						"qualifiedName": "BitFieldResolvable",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.intents"
					}
				},
				{
					"id": 11,
					"name": "invalidRequestWarningInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4244,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.invalidRequestWarningInterval"
					}
				},
				{
					"id": 7,
					"name": "makeCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4238,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "CacheFactory",
						"qualifiedName": "CacheFactory",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.makeCache"
					}
				},
				{
					"id": 8,
					"name": "messageCacheLifetime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Pass the value of this property as "
									},
									{
										"kind": "code",
										"text": "`lifetime`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`sweepers.messages`"
									},
									{
										"kind": "text",
										"text": " instead."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4240,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.messageCacheLifetime"
					}
				},
				{
					"id": 9,
					"name": "messageSweepInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Pass the value of this property as "
									},
									{
										"kind": "code",
										"text": "`interval`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`sweepers.messages`"
									},
									{
										"kind": "text",
										"text": " instead."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4242,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.messageSweepInterval"
					}
				},
				{
					"id": 12,
					"name": "partials",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4245,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PartialTypes",
							"qualifiedName": "PartialTypes",
							"package": "discord.js"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.partials"
					}
				},
				{
					"id": 21,
					"name": "presence",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4254,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "PresenceData",
						"qualifiedName": "PresenceData",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.presence"
					}
				},
				{
					"id": 27,
					"name": "rejectOnRateLimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4260,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 28,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "node_modules/discord.js/typings/index.d.ts",
											"line": 4260,
											"character": 34
										}
									],
									"signatures": [
										{
											"id": 29,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 30,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "RateLimitData",
														"qualifiedName": "RateLimitData",
														"package": "discord.js"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Promise",
														"qualifiedName": "Promise",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.rejectOnRateLimit"
					}
				},
				{
					"id": 16,
					"name": "restGlobalRateLimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4249,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.restGlobalRateLimit"
					}
				},
				{
					"id": 15,
					"name": "restRequestTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4248,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.restRequestTimeout"
					}
				},
				{
					"id": 17,
					"name": "restSweepInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4250,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.restSweepInterval"
					}
				},
				{
					"id": 14,
					"name": "restTimeOffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4247,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.restTimeOffset"
					}
				},
				{
					"id": 13,
					"name": "restWsBridgeTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4246,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.restWsBridgeTimeout"
					}
				},
				{
					"id": 18,
					"name": "retryLimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4251,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.retryLimit"
					}
				},
				{
					"id": 5,
					"name": "shardCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4236,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.shardCount"
					}
				},
				{
					"id": 4,
					"name": "shards",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4235,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"type": "literal",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.shards"
					}
				},
				{
					"id": 24,
					"name": "sweepers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4257,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "SweeperOptions",
						"qualifiedName": "SweeperOptions",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.sweepers"
					}
				},
				{
					"id": 20,
					"name": "userAgentSuffix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4253,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.userAgentSuffix"
					}
				},
				{
					"id": 23,
					"name": "waitGuildTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4256,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.waitGuildTimeout"
					}
				},
				{
					"id": 25,
					"name": "ws",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 4258,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "WebSocketOptions",
						"qualifiedName": "WebSocketOptions",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.ws"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10,
						6,
						3,
						19,
						26,
						22,
						11,
						7,
						8,
						9,
						12,
						21,
						27,
						16,
						15,
						17,
						14,
						13,
						18,
						5,
						4,
						24,
						20,
						23,
						25
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 39,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/RecipleClient.ts#L39"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ClientOptions",
					"qualifiedName": "ClientOptions",
					"package": "discord.js"
				}
			]
		},
		{
			"id": 422,
			"name": "RecipleInteractionCommandExecute",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 425,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L9"
						}
					],
					"type": {
						"type": "reference",
						"id": 427,
						"name": "InteractionCommandBuilder"
					}
				},
				{
					"id": 426,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L10"
						}
					],
					"type": {
						"type": "reference",
						"id": 126,
						"typeArguments": [
							{
								"type": "literal",
								"value": true
							}
						],
						"name": "RecipleClient"
					}
				},
				{
					"id": 424,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L8"
						}
					],
					"type": {
						"type": "reference",
						"id": 427,
						"name": "InteractionCommandBuilder"
					}
				},
				{
					"id": 423,
					"name": "interaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L7"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "CacheType",
								"qualifiedName": "CacheType",
								"package": "discord.js"
							}
						],
						"name": "CommandInteraction",
						"qualifiedName": "CommandInteraction",
						"package": "discord.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						425,
						426,
						424,
						423
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/InteractionCommandBuilder.ts#L6"
				}
			]
		},
		{
			"id": 554,
			"name": "RecipleMessageCommandExecute",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 558,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L12"
						}
					],
					"type": {
						"type": "reference",
						"id": 566,
						"name": "MessageCommandBuilder"
					}
				},
				{
					"id": 559,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L13"
						}
					],
					"type": {
						"type": "reference",
						"id": 126,
						"typeArguments": [
							{
								"type": "literal",
								"value": true
							}
						],
						"name": "RecipleClient"
					}
				},
				{
					"id": 557,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"name": "Command",
						"qualifiedName": "Command",
						"package": "fallout-utility"
					}
				},
				{
					"id": 555,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L9"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Message",
						"qualifiedName": "Message",
						"package": "discord.js"
					}
				},
				{
					"id": 556,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L10"
						}
					],
					"type": {
						"type": "reference",
						"id": 643,
						"name": "MessageCommandOptions"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						558,
						559,
						557,
						555,
						556
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/builders/MessageCommandBuilder.ts#L8"
				}
			]
		},
		{
			"id": 995,
			"name": "RecipleModule",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 997,
					"name": "info",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 998,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 999,
									"name": "filename",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 24,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1001,
									"name": "path",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 26,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1000,
									"name": "versions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 25,
											"character": 8,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L25"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										999,
										1001,
										1000
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/modules.ts",
									"line": 23,
									"character": 10,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L23"
								}
							]
						}
					}
				},
				{
					"id": 996,
					"name": "script",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"id": 984,
						"name": "RecipleScript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						997,
						996
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 21,
					"character": 17,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L21"
				}
			]
		},
		{
			"id": 1007,
			"name": "interactionCommandBuilders",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/registerInteractionCommands.ts",
					"line": 14,
					"character": 12,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/registerInteractionCommands.ts#L14"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 427,
						"name": "InteractionCommandBuilder"
					},
					{
						"type": "reference",
						"name": "ContextMenuCommandBuilder",
						"qualifiedName": "ContextMenuCommandBuilder",
						"package": "@discordjs/builders"
					},
					{
						"type": "reference",
						"name": "SlashCommandBuilder",
						"qualifiedName": "SlashCommandBuilder",
						"package": "@discordjs/builders"
					},
					{
						"type": "reference",
						"name": "SlashCommandSubcommandBuilder",
						"qualifiedName": "SlashCommandSubcommandBuilder",
						"package": "@discordjs/builders"
					},
					{
						"type": "reference",
						"name": "SlashCommandOptionsOnlyBuilder",
						"qualifiedName": "SlashCommandOptionsOnlyBuilder",
						"package": "@discordjs/builders"
					},
					{
						"type": "reference",
						"name": "SlashCommandSubcommandGroupBuilder",
						"qualifiedName": "SlashCommandSubcommandGroupBuilder",
						"package": "@discordjs/builders"
					},
					{
						"type": "reference",
						"name": "SlashCommandSubcommandsOnlyBuilder",
						"qualifiedName": "SlashCommandSubcommandsOnlyBuilder",
						"package": "@discordjs/builders"
					}
				]
			}
		},
		{
			"id": 980,
			"name": "loadedModules",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 12,
					"character": 12,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L12"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 981,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 982,
							"name": "commands",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/modules.ts",
									"line": 12,
									"character": 30,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L12"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 978,
									"name": "recipleCommandBuilders"
								}
							}
						},
						{
							"id": 983,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/modules.ts",
									"line": 12,
									"character": 66,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L12"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 995,
									"name": "RecipleModule"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								982,
								983
							]
						}
					],
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 12,
							"character": 28,
							"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L12"
						}
					]
				}
			}
		},
		{
			"id": 978,
			"name": "recipleCommandBuilders",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 10,
					"character": 12,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L10"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 566,
						"name": "MessageCommandBuilder"
					},
					{
						"type": "reference",
						"id": 427,
						"name": "InteractionCommandBuilder"
					}
				]
			}
		},
		{
			"id": 979,
			"name": "recipleCommandBuildersExecute",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L11"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 422,
						"name": "RecipleInteractionCommandExecute"
					},
					{
						"type": "reference",
						"id": 554,
						"name": "RecipleMessageCommandExecute"
					}
				]
			}
		},
		{
			"id": 1,
			"name": "discordjs",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 3,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/index.ts#L3"
				}
			],
			"type": {
				"type": "reference",
				"name": "__module",
				"qualifiedName": "\"/home/ghextercortes/Documents/GitHub/reciple/node_modules/discord.js/typings/index\"",
				"package": "discord.js"
			},
			"defaultValue": "discord"
		},
		{
			"id": 961,
			"name": "flags",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/reciple/flags.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/flags.ts#L4"
				}
			],
			"type": {
				"type": "reference",
				"name": "OptionValues",
				"qualifiedName": "OptionValues",
				"package": "commander"
			},
			"defaultValue": "..."
		},
		{
			"id": 962,
			"name": "token",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/reciple/flags.ts",
					"line": 11,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/flags.ts#L11"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": "flags.token"
		},
		{
			"id": 1022,
			"name": "version",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L4"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "..."
		},
		{
			"id": 949,
			"name": "hasPermissions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/hasPermissions.ts",
					"line": 6,
					"character": 16,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/hasPermissions.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 950,
					"name": "hasPermissions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 951,
							"name": "commandName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 952,
							"name": "memberPermissions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "Permissions",
								"qualifiedName": "Permissions",
								"package": "discord.js"
							}
						},
						{
							"id": 953,
							"name": "configConmmandPermissions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 954,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 956,
													"name": "commands",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 36,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L36"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 355,
															"name": "ConfigCommandPermissions"
														}
													}
												},
												{
													"id": 955,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 35,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L35"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														956,
														955
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 34,
													"character": 25,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L34"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 957,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 959,
													"name": "commands",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 40,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L40"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 355,
															"name": "ConfigCommandPermissions"
														}
													}
												},
												{
													"id": 958,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/Config.ts",
															"line": 39,
															"character": 12,
															"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L39"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														959,
														958
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 38,
													"character": 29,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L38"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 960,
							"name": "builder",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 978,
								"name": "recipleCommandBuilders"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 963,
			"name": "isIgnoredChannel",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/isIgnoredChannel.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/isIgnoredChannel.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 964,
					"name": "isIgnoredChannel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 965,
							"name": "channelId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 966,
							"name": "ignoredChannelsConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 967,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 970,
											"name": "channels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 46,
													"character": 8,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L46"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 969,
											"name": "convertToAllowList",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 45,
													"character": 8,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L45"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 968,
											"name": "enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/Config.ts",
													"line": 44,
													"character": 8,
													"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L44"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												970,
												969,
												968
											]
										}
									],
									"sources": [
										{
											"fileName": "src/reciple/classes/Config.ts",
											"line": 43,
											"character": 21,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/classes/Config.ts#L43"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1018,
			"name": "isSupportedVersion",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 17,
					"character": 16,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L17"
				}
			],
			"signatures": [
				{
					"id": 1019,
					"name": "isSupportedVersion",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1020,
							"name": "versionRange",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1021,
							"name": "supportedVersion",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1008,
			"name": "isValidVersion",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 6,
					"character": 16,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 1009,
					"name": "isValidVersion",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1010,
							"name": "ver",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 975,
			"name": "loadModules",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 30,
					"character": 22,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/modules.ts#L30"
				}
			],
			"signatures": [
				{
					"id": 976,
					"name": "loadModules",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 977,
							"name": "client",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "RecipleClient"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 980,
								"name": "loadedModules"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 971,
			"name": "logger",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/logger.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/logger.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 972,
					"name": "logger",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 973,
							"name": "stringifyJSON",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 974,
							"name": "debugmode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Logger",
						"qualifiedName": "Logger",
						"package": "fallout-utility"
					}
				}
			]
		},
		{
			"id": 1011,
			"name": "parseVersion",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 10,
					"character": 16,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L10"
				}
			],
			"signatures": [
				{
					"id": 1012,
					"name": "parseVersion",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1013,
							"name": "ver",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1014,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1015,
									"name": "major",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/version.ts",
											"line": 14,
											"character": 13,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "..."
								},
								{
									"id": 1016,
									"name": "minor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/version.ts",
											"line": 14,
											"character": 37,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "..."
								},
								{
									"id": 1017,
									"name": "patch",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/version.ts",
											"line": 14,
											"character": 61,
											"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1015,
										1016,
										1017
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/version.ts",
									"line": 14,
									"character": 11,
									"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/version.ts#L14"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1002,
			"name": "registerInteractionCommands",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/registerInteractionCommands.ts",
					"line": 19,
					"character": 22,
					"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/reciple/registerInteractionCommands.ts#L19"
				}
			],
			"signatures": [
				{
					"id": 1003,
					"name": "registerInteractionCommands",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1004,
							"name": "client",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "RecipleClient"
							}
						},
						{
							"id": 1005,
							"name": "cmds",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 1007,
											"name": "interactionCommandBuilders"
										},
										{
											"type": "reference",
											"name": "ApplicationCommandDataResolvable",
											"qualifiedName": "ApplicationCommandDataResolvable",
											"package": "discord.js"
										}
									]
								}
							}
						},
						{
							"id": 1006,
							"name": "overwriteGuilds",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				427,
				566,
				618,
				643,
				126,
				405,
				984
			]
		},
		{
			"title": "Interfaces",
			"children": [
				358,
				355,
				560,
				31,
				40,
				2,
				422,
				554,
				995
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1007,
				980,
				978,
				979
			]
		},
		{
			"title": "Variables",
			"children": [
				1,
				961,
				962,
				1022
			]
		},
		{
			"title": "Functions",
			"children": [
				949,
				963,
				1018,
				1008,
				975,
				971,
				1011,
				1002
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0,
			"url": "https://github.com/FalloutStudios/Reciple/blob/5e246e0/src/index.ts#L1"
		}
	]
}