{"typeDocJsonParserVersion":"10.0.0","id":0,"name":"@reciple/utils","version":null,"readme":"<h1 align=\"center\">\n    <img src=\"https://i.imgur.com/h0ljJR5.png\" width=\"50%\">\n    <br>\n</h1>\n\n<h3 align=\"center\">\n    <a href=\"https://discord.gg/thenorthsolution\">\n        <img src=\"https://img.shields.io/discord/1032785824686817291?color=5865F2&logo=discord&logoColor=white\">\n    </a>\n    <a href=\"https://npmjs.org/package/@reciple/utils\">\n        <img src=\"https://img.shields.io/npm/v/%40reciple/utils?label=npm\">\n    </a>\n    <a href=\"https://github.com/thenorthsolution/Reciple/tree/main/packages/utils\">\n        <img src=\"https://img.shields.io/npm/dt/%40reciple/docgen?maxAge=3600\">\n    </a>\n    <a href=\"https://www.codefactor.io/repository/github/thenorthsolution/reciple\">\n        <img src=\"https://www.codefactor.io/repository/github/thenorthsolution/reciple/badge\">\n    </a>\n    <br>\n    <div style=\"padding-top: 1rem\">\n        <a href=\"https://discord.gg/thenorthsolution\">\n            <img src=\"http://invidget.switchblade.xyz/thenorthsolution\">\n        </a>\n    </div>\n</h3>\n\n---\n\n## About\n\n`@reciple/utils` global utilities used by reciple modules\n\n## Usage\n\n```js\nimport { MessageURLData } from '@reciple/utils';\nimport { RecipleClient } from '@reciple/core';\n\nconst client = new RecipleClient({\n    token: process.env.TOKEN,\n    client: {\n        intents: ['Guilds']\n    }\n});\n\nconst messageData = await MessageURLData.fetch('https://discord.com/channels/0000000000000000000/0000000000000000000/0000000000000000000', client);\n\nif (messageData.inGuild()) await messageData.message.reply('yeah');\n\nawait client.login();\n```\n","changelog":null,"classes":[{"id":6,"name":"ImageBase64","source":{"line":5,"file":"ImageBase64Resolver.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/ImageBase64Resolver.ts#L5"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":null,"implementsType":[],"typeParameters":[],"construct":{"id":7,"name":"constructor","source":{"line":6,"file":"ImageBase64Resolver.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/ImageBase64Resolver.ts#L6"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":6,"accessibility":"private","parameters":[]},"properties":[],"methods":[{"id":15,"name":"resolveFile","source":{"line":32,"file":"ImageBase64Resolver.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/ImageBase64Resolver.ts#L32"},"parentId":6,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":16,"name":"resolveFile","comment":{"description":"Resolves image file/url/buffer","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":17,"name":"resource","comment":{"description":"Source","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"BufferResolvable","packageName":"discord.js","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"ResolvedFile","packageName":"discord.js","typeArguments":[]}]}}]},{"id":9,"name":"resolveImage","source":{"line":12,"file":"ImageBase64Resolver.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/ImageBase64Resolver.ts#L12"},"parentId":6,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":10,"name":"resolveImage","comment":{"description":"Resolves Base64 string URL","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":11,"name":"image","comment":{"description":"Image resolvable","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"__global.Buffer","packageName":"@types/node","typeArguments":[]}]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"string"}]}}]},{"id":12,"name":"toDataBase64","source":{"line":23,"file":"ImageBase64Resolver.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/ImageBase64Resolver.ts#L23"},"parentId":6,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":13,"name":"toDataBase64","comment":{"description":"Converts buffer/image to string data base64","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":14,"name":"data","comment":{"description":"Base64 resolvable","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Base64Resolvable","packageName":"discord.js","typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"string"}}]}]},{"id":22,"name":"MessageURLData","source":{"line":15,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L15"},"namespaceParentId":null,"comment":{"description":"Message URL object","blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":null,"implementsType":[{"kind":"reference","id":18,"name":"ParseMessageURLData","packageName":"@reciple/utils","typeArguments":[]}],"typeParameters":[{"id":73,"name":"InGuild","constraint":{"kind":"intrinsic","type":"boolean"},"default":{"kind":"intrinsic","type":"boolean"}},{"id":74,"name":"Fetched","constraint":{"kind":"intrinsic","type":"boolean"},"default":{"kind":"intrinsic","type":"boolean"}}],"construct":{"id":37,"name":"constructor","source":{"line":50,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L50"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","parameters":[{"id":41,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":18,"name":"ParseMessageURLData","packageName":"@reciple/utils","typeArguments":[]}},{"id":42,"name":"client","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}}]},"properties":[{"id":45,"name":"_channel","source":{"line":18,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L18"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"private","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"TextBasedChannel","packageName":"discord.js","typeArguments":[]}]}},{"id":44,"name":"_guild","source":{"line":17,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L17"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"private","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Guild","packageName":"discord.js","typeArguments":[]}]}},{"id":43,"name":"_guildId","source":{"line":16,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L16"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"private","abstract":false,"static":false,"readonly":false,"optional":false,"type":{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"string"}]}},{"id":46,"name":"_message","source":{"line":19,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L19"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"private","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}},{"id":47,"name":"channelId","source":{"line":24,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L24"},"comment":{"description":"The message channel id","blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","abstract":false,"static":false,"readonly":true,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":57,"name":"client","source":{"line":50,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L50"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}},{"id":48,"name":"messageId","source":{"line":28,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L28"},"comment":{"description":"The message id","blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","abstract":false,"static":false,"readonly":true,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":54,"name":"channel","source":{"line":43,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L43"},"comment":{"description":"THe message channel object","blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"If","packageName":"discord.js","typeArguments":[{"kind":"reference","id":40,"name":"MessageURLData.Fetched","packageName":"@reciple/utils","typeArguments":[]},{"kind":"reference","id":null,"name":"If","packageName":"discord.js","typeArguments":[{"kind":"reference","id":39,"name":"MessageURLData.InGuild","packageName":"@reciple/utils","typeArguments":[]},{"kind":"reference","id":null,"name":"GuildTextBasedChannel","packageName":"discord.js","typeArguments":[]},{"kind":"union","types":[{"kind":"reference","id":null,"name":"DMChannel","packageName":"discord.js","typeArguments":[]},{"kind":"reference","id":null,"name":"PartialDMChannel","packageName":"discord.js","typeArguments":[]},{"kind":"reference","id":null,"name":"PartialGroupDMChannel","packageName":"discord.js","typeArguments":[]}]}]},{"kind":"intrinsic","type":"undefined"}]}},{"id":52,"name":"guild","source":{"line":38,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L38"},"comment":{"description":"The message guild object","blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"If","packageName":"discord.js","typeArguments":[{"kind":"reference","id":40,"name":"MessageURLData.Fetched","packageName":"@reciple/utils","typeArguments":[]},{"kind":"reference","id":null,"name":"If","packageName":"discord.js","typeArguments":[{"kind":"reference","id":39,"name":"MessageURLData.InGuild","packageName":"@reciple/utils","typeArguments":[]},{"kind":"reference","id":null,"name":"Guild","packageName":"discord.js","typeArguments":[]},{"kind":"literal","value":"null"}]},{"kind":"intrinsic","type":"undefined"}]}},{"id":50,"name":"guildId","source":{"line":33,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L33"},"comment":{"description":"The message guild id","blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"If","packageName":"discord.js","typeArguments":[{"kind":"reference","id":39,"name":"MessageURLData.InGuild","packageName":"@reciple/utils","typeArguments":[]},{"kind":"intrinsic","type":"string"}]}},{"id":56,"name":"message","source":{"line":48,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L48"},"comment":{"description":"The message object","blockTags":[],"modifierTags":[]},"parentId":22,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"If","packageName":"discord.js","typeArguments":[{"kind":"reference","id":40,"name":"MessageURLData.Fetched","packageName":"@reciple/utils","typeArguments":[]},{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"reference","id":39,"name":"MessageURLData.InGuild","packageName":"@reciple/utils","typeArguments":[]}]},{"kind":"intrinsic","type":"undefined"}]}}],"methods":[{"id":58,"name":"fetch","source":{"line":60,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L60"},"parentId":22,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":59,"name":"fetch","comment":{"description":"Fetch guild, channel, and message objects","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":60,"name":"options","comment":{"description":"Fetch options","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intersection","types":[{"kind":"reference","id":null,"name":"BaseFetchOptions","packageName":"discord.js","typeArguments":[]},{"kind":"reflection","properties":[{"id":62,"name":"client","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}}],"signatures":null,"methods":null}]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":22,"name":"MessageURLData","packageName":"@reciple/utils","typeArguments":[{"kind":"reference","id":39,"name":"MessageURLData.InGuild","packageName":"@reciple/utils","typeArguments":[]},{"kind":"literal","value":"true"}]}]}}]},{"id":67,"name":"inGuild","source":{"line":90,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L90"},"parentId":22,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":68,"name":"inGuild","comment":{"description":"Check if message URL is in guild","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"predicate","asserts":false,"name":"this","type":{"kind":"reference","id":22,"name":"MessageURLData","packageName":"@reciple/utils","typeArguments":[{"kind":"literal","value":"true"},{"kind":"reference","id":40,"name":"MessageURLData.Fetched","packageName":"@reciple/utils","typeArguments":[]}]}}}]},{"id":65,"name":"isDMBased","source":{"line":83,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L83"},"parentId":22,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":66,"name":"isDMBased","comment":{"description":"Check if message URL is in DM","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"predicate","asserts":false,"name":"this","type":{"kind":"reference","id":22,"name":"MessageURLData","packageName":"@reciple/utils","typeArguments":[{"kind":"literal","value":"false"},{"kind":"reference","id":40,"name":"MessageURLData.Fetched","packageName":"@reciple/utils","typeArguments":[]}]}}}]},{"id":63,"name":"isFetched","source":{"line":76,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L76"},"parentId":22,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":64,"name":"isFetched","comment":{"description":"Check if the objects are fetched","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"predicate","asserts":false,"name":"this","type":{"kind":"reference","id":22,"name":"MessageURLData","packageName":"@reciple/utils","typeArguments":[{"kind":"reference","id":39,"name":"MessageURLData.InGuild","packageName":"@reciple/utils","typeArguments":[]},{"kind":"literal","value":"true"}]}}}]},{"id":71,"name":"toJSON","source":{"line":104,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L104"},"parentId":22,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":72,"name":"toJSON","comment":{"description":"Flatten object data","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"reference","id":18,"name":"ParseMessageURLData","packageName":"@reciple/utils","typeArguments":[]}}]},{"id":69,"name":"toString","source":{"line":97,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L97"},"parentId":22,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":70,"name":"toString","comment":{"description":"Get URL string","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"intrinsic","type":"string"}}]},{"id":23,"name":"fetch","source":{"line":118,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L118"},"parentId":22,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":24,"name":"fetch","comment":{"description":"Fetch message URL data","blockTags":[],"modifierTags":[]},"typeParameters":[{"id":25,"name":"InGuild","constraint":{"kind":"intrinsic","type":"boolean"},"default":{"kind":"intrinsic","type":"boolean"}}],"parameters":[{"id":26,"name":"url","comment":{"description":"The message URL","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"URL","packageName":"typescript","typeArguments":[]}]}},{"id":27,"name":"client","comment":{"description":"Discord.js client object","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}},{"id":28,"name":"fetchOptions","comment":{"description":"Fetch options","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"BaseFetchOptions","packageName":"discord.js","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":22,"name":"MessageURLData","packageName":"@reciple/utils","typeArguments":[{"kind":"reference","id":25,"name":"InGuild","packageName":"@reciple/utils","typeArguments":[]},{"kind":"literal","value":"true"}]}]}}]},{"id":34,"name":"isValidMessageURL","source":{"line":148,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L148"},"parentId":22,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":35,"name":"isValidMessageURL","comment":{"description":"Check if string is valid message URL","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":36,"name":"url","comment":{"description":"url string","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"URL","packageName":"typescript","typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"boolean"}}]},{"id":29,"name":"parse","source":{"line":128,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L128"},"parentId":22,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":30,"name":"parse","comment":{"description":"Parse message URL data without fetching objects","blockTags":[],"modifierTags":[]},"typeParameters":[{"id":31,"name":"InGuild","constraint":{"kind":"intrinsic","type":"boolean"},"default":{"kind":"intrinsic","type":"boolean"}}],"parameters":[{"id":32,"name":"url","comment":{"description":"The message URL","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"URL","packageName":"typescript","typeArguments":[]}]}},{"id":33,"name":"client","comment":{"description":"Discord.js client object","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}}],"returnType":{"kind":"reference","id":22,"name":"MessageURLData","packageName":"@reciple/utils","typeArguments":[{"kind":"reference","id":31,"name":"InGuild","packageName":"@reciple/utils","typeArguments":[]},{"kind":"literal","value":"false"}]}}]}]},{"id":96,"name":"PackageUpdateChecker","source":{"line":45,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L45"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":null,"name":"StrictTypedEmitter","packageName":"fallout-utility","typeArguments":[{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}]},"implementsType":[],"typeParameters":[],"construct":{"id":177,"name":"constructor","source":{"line":49,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L49"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":96,"accessibility":"public","parameters":[{"id":179,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":75,"name":"PackageUpdateCheckerOptions","packageName":"@reciple/utils","typeArguments":[]}}]},"properties":[{"id":181,"name":"interval","source":{"line":47,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L47"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":96,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"__global.NodeJS.Timeout","packageName":"@types/node","typeArguments":[]}},{"id":180,"name":"packages","source":{"line":46,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L46"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":96,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Collection","packageName":"@discordjs/collection","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"string"}]}},{"id":174,"name":"captureRejectionSymbol","source":{"line":405,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"comment":{"description":"Value: `Symbol.for('nodejs.rejection')`\n\nSee how to write a custom `rejection handler`.","blockTags":[{"name":"since","text":"v13.4.0, v12.16.0"}],"modifierTags":[]},"parentId":96,"accessibility":"public","abstract":false,"static":true,"readonly":true,"optional":false,"type":{"kind":"query","query":{"kind":"reference","id":174,"name":"EventEmitter.captureRejectionSymbol","packageName":"@types/node","typeArguments":[]}}},{"id":175,"name":"captureRejections","source":{"line":412,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"comment":{"description":"Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default `captureRejections` option on all new `EventEmitter` objects.","blockTags":[{"name":"since","text":"v13.4.0, v12.16.0"}],"modifierTags":[]},"parentId":96,"accessibility":"public","abstract":false,"static":true,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}},{"id":176,"name":"defaultMaxListeners","source":{"line":451,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"comment":{"description":"By default, a maximum of `10` listeners can be registered for any single\nevent. This limit can be changed for individual `EventEmitter` instances\nusing the `emitter.setMaxListeners(n)` method. To change the default\nfor _all_`EventEmitter` instances, the `events.defaultMaxListeners` property\ncan be used. If this value is not a positive number, a `RangeError` is thrown.\n\nTake caution when setting the `events.defaultMaxListeners` because the\nchange affects _all_ `EventEmitter` instances, including those created before\nthe change is made. However, calling `emitter.setMaxListeners(n)` still has\nprecedence over `events.defaultMaxListeners`.\n\nThis is not a hard limit. The `EventEmitter` instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single\n`EventEmitter`, the `emitter.getMaxListeners()` and `emitter.setMaxListeners()` methods can be used to\ntemporarily avoid this warning:\n\n```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```\n\nThe `--trace-warnings` command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with `process.on('warning')` and will\nhave the additional `emitter`, `type`, and `count` properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts `name` property is set to `'MaxListenersExceededWarning'`.","blockTags":[{"name":"since","text":"v0.11.2"}],"modifierTags":[]},"parentId":96,"accessibility":"public","abstract":false,"static":true,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"number"}},{"id":173,"name":"errorMonitor","source":{"line":398,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"comment":{"description":"This symbol shall be used to install a listener for only monitoring `'error'` events. Listeners installed using this symbol are called before the regular `'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an `'error'` event is emitted. Therefore, the process will still crash if no\nregular `'error'` listener is installed.","blockTags":[{"name":"since","text":"v13.6.0, v12.17.0"}],"modifierTags":[]},"parentId":96,"accessibility":"public","abstract":false,"static":true,"readonly":true,"optional":false,"type":{"kind":"query","query":{"kind":"reference","id":173,"name":"EventEmitter.errorMonitor","packageName":"@types/node","typeArguments":[]}}}],"methods":[{"id":262,"name":"[captureRejectionSymbol]","source":{"line":115,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":263,"name":"[captureRejectionSymbol]","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":264,"name":"K","constraint":null,"default":null}],"parameters":[{"id":265,"name":"error","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}},{"id":266,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":267,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":null,"name":"AnyRest","packageName":"@types/node","typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"void"}}]},{"id":225,"name":"addListener","source":{"line":12,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":226,"name":"addListener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":227,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":228,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":227,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":229,"name":"listener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":231,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":232,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":227,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":187,"name":"checkForAvailableUpdates","source":{"line":72,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L72"},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":188,"name":"checkForAvailableUpdates","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"array","type":{"kind":"reference","id":84,"name":"PackageUpdateCheckerUpdateData","packageName":"@reciple/utils","typeArguments":[]}}]}}]},{"id":233,"name":"emit","source":{"line":13,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":234,"name":"emit","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":235,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":236,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":235,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":237,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":235,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"boolean"}}]},{"id":273,"name":"eventNames","source":{"line":875,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":274,"name":"eventNames","comment":{"description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```","blockTags":[{"name":"since","text":"v6.0.0"}],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"array","type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}}}]},{"id":271,"name":"getMaxListeners","source":{"line":727,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":272,"name":"getMaxListeners","comment":{"description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.","blockTags":[{"name":"since","text":"v1.0.0"}],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"intrinsic","type":"number"}}]},{"id":189,"name":"listenerCount","source":{"line":5,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":190,"name":"listenerCount","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":191,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"number"}}]},{"id":192,"name":"listeners","source":{"line":6,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":193,"name":"listeners","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":194,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}}}],"returnType":{"kind":"array","type":{"kind":"reference","id":null,"name":"Function","packageName":"typescript","typeArguments":[]}}}]},{"id":201,"name":"off","source":{"line":9,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":202,"name":"off","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":203,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":204,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":203,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":205,"name":"listener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":207,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":208,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":203,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":209,"name":"on","source":{"line":10,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":210,"name":"on","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":211,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":212,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":211,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":213,"name":"listener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":215,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":216,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":211,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":217,"name":"once","source":{"line":11,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":218,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":219,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":220,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":219,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":221,"name":"listener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":223,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":224,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":219,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":238,"name":"prependListener","source":{"line":14,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":239,"name":"prependListener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":240,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":241,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":240,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":242,"name":"listener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":244,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":245,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":240,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":246,"name":"prependOnceListener","source":{"line":15,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":247,"name":"prependOnceListener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":248,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":249,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":248,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":250,"name":"listener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":252,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":253,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":248,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":195,"name":"rawListeners","source":{"line":7,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":196,"name":"rawListeners","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":197,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}}}],"returnType":{"kind":"array","type":{"kind":"reference","id":null,"name":"Function","packageName":"typescript","typeArguments":[]}}}]},{"id":198,"name":"removeAllListeners","source":{"line":8,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":199,"name":"removeAllListeners","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":200,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"unknown","name":"keyof PackageUpdateCheckerEvents"}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":254,"name":"removeListener","source":{"line":16,"file":"StrictTypedEmitter.d.ts","path":"node_modules/fallout-utility/dist/scripts/classes","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":255,"name":"removeListener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":256,"name":"K","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]}},"default":null}],"parameters":[{"id":257,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":256,"name":"K","packageName":"fallout-utility","typeArguments":[]}},{"id":258,"name":"listener","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":260,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":261,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"indexedAccess","objectType":{"kind":"reference","id":81,"name":"PackageUpdateCheckerEvents","packageName":"@reciple/utils","typeArguments":[]},"indexType":{"kind":"reference","id":256,"name":"K","packageName":"fallout-utility","typeArguments":[]}}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":268,"name":"setMaxListeners","source":{"line":721,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":269,"name":"setMaxListeners","comment":{"description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to `Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","blockTags":[{"name":"since","text":"v0.3.5"}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":270,"name":"n","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"number"}}],"returnType":{"kind":"intrinsic","type":"this"}}]},{"id":182,"name":"startCheckInterval","source":{"line":59,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L59"},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":183,"name":"startCheckInterval","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":184,"name":"ms","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"returnType":{"kind":"intrinsic","type":"void"}}]},{"id":185,"name":"stopCheckInterval","source":{"line":68,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L68"},"parentId":96,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":186,"name":"stopCheckInterval","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"intrinsic","type":"void"}}]},{"id":166,"name":"addAbortListener","source":{"line":390,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":167,"name":"addAbortListener","comment":{"description":"Listens once to the `abort` event on the provided `signal`.\n\nListening to the `abort` event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall `e.stopImmediatePropagation()`. Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using `AbortSignal`s in Node.js APIs by solving these\ntwo issues by listening to the event such that `stopImmediatePropagation` does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```","blockTags":[{"name":"since","text":"v20.5.0"},{"name":"returns","text":"Disposable that removes the `abort` listener."}],"modifierTags":["@experimental"]},"typeParameters":[],"parameters":[{"id":168,"name":"signal","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"AbortSignal","packageName":"typescript","typeArguments":[]}},{"id":169,"name":"resource","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":null,"signatures":[{"id":171,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":172,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Event","packageName":"typescript","typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}],"returnType":{"kind":"reference","id":null,"name":"Disposable","packageName":"typescript","typeArguments":[]}}]},{"id":97,"name":"checkLatestUpdate","source":{"line":90,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L90"},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":98,"name":"checkLatestUpdate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":99,"name":"pkg","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":100,"name":"version","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":101,"name":"allowMajor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":84,"name":"PackageUpdateCheckerUpdateData","packageName":"@reciple/utils","typeArguments":[]}]}}]},{"id":102,"name":"fetchPackageData","source":{"line":118,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L118"},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":103,"name":"fetchPackageData","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":104,"name":"T","constraint":{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reflection","properties":[{"id":108,"name":"dist-tags","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"DistTags","packageName":"package-json","typeArguments":[]}},{"id":107,"name":"modified","comment":{"description":"An {@link ISO timestamp} of the last time the package was modified.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":106,"name":"name","comment":{"description":"The name of the package.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":109,"name":"versions","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Record","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"AbbreviatedVersion","packageName":"package-json","typeArguments":[]}]}}],"signatures":null,"methods":null}]},"default":{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reflection","properties":[{"id":113,"name":"dist-tags","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"DistTags","packageName":"package-json","typeArguments":[]}},{"id":112,"name":"modified","comment":{"description":"An {@link ISO timestamp} of the last time the package was modified.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":111,"name":"name","comment":{"description":"The name of the package.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":114,"name":"versions","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Record","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"AbbreviatedVersion","packageName":"package-json","typeArguments":[]}]}}],"signatures":null,"methods":null}]}}],"parameters":[{"id":115,"name":"pkg","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":116,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reflection","properties":[{"id":120,"name":"allVersions","comment":{"description":"Return the [main entry](https://registry.npmjs.org/ava) containing all versions.","blockTags":[{"name":"default","text":"```ts\nfalse\n```"}],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":119,"name":"fullMetadata","comment":{"description":"By default, only an abbreviated metadata object is returned for performance reasons. [Read more.](https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md)","blockTags":[{"name":"default","text":"```ts\nfalse\n```"}],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":122,"name":"omitDeprecated","comment":{"description":"Whether or not to omit deprecated versions of a package.\n\nIf set, versions marked as deprecated on the registry are omitted from results. Providing a dist tag or a specific version will still return that version, even if it's deprecated. If no version can be found once deprecated versions are omitted, a `VersionNotFoundError` is thrown.","blockTags":[{"name":"default","text":"```ts\ntrue\n```"}],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":121,"name":"registryUrl","comment":{"description":"The registry URL is by default inferred from the npm defaults and `.npmrc`. This is beneficial as `package-json` and any project using it will work just like npm. This option is*only** intended for internal tools. You should __not__ use this option in reusable packages. Prefer just using `.npmrc` whenever possible.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"string"}},{"id":118,"name":"version","comment":{"description":"Package version such as `1.0.0` or a [dist tag](https://docs.npmjs.com/cli/dist-tag) such as `latest`.\n\nThe version can also be in any format supported by the [semver](https://github.com/npm/node-semver) module. For example:\n- `1` - Get the latest `1.x.x`\n- `1.2` - Get the latest `1.2.x`\n- `^1.2.3` - Get the latest `1.x.x` but at least `1.2.3`\n- `~1.2.3` - Get the latest `1.2.x` but at least `1.2.3`","blockTags":[{"name":"default","text":"```ts\n'latest'\n```"}],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"string"}}],"signatures":null,"methods":null}]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":104,"name":"T","packageName":"@reciple/utils","typeArguments":[]}]}},{"id":123,"name":"fetchPackageData","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":124,"name":"T","constraint":{"kind":"reference","id":281,"name":"FullMetadata","packageName":"package-json","typeArguments":[]},"default":{"kind":"reference","id":281,"name":"FullMetadata","packageName":"package-json","typeArguments":[]}}],"parameters":[{"id":125,"name":"pkg","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":126,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":281,"name":"FullMetadata","packageName":"package-json","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":124,"name":"T","packageName":"@reciple/utils","typeArguments":[]}]}}]},{"id":155,"name":"getEventListeners","source":{"line":311,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":156,"name":"getEventListeners","comment":{"description":"Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```","blockTags":[{"name":"since","text":"v15.2.0, v14.17.0"}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":157,"name":"emitter","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"__global.NodeJS.EventEmitter","packageName":"@types/node","typeArguments":[{"kind":"reference","id":null,"name":"DefaultEventMap","packageName":"@types/node","typeArguments":[]}]},{"kind":"reference","id":null,"name":"EventTarget","packageName":"typescript","typeArguments":[]}]}},{"id":158,"name":"name","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}}],"returnType":{"kind":"array","type":{"kind":"reference","id":null,"name":"Function","packageName":"typescript","typeArguments":[]}}}]},{"id":159,"name":"getMaxListeners","source":{"line":340,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":160,"name":"getMaxListeners","comment":{"description":"Returns the currently set max amount of listeners.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.getMaxListeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```","blockTags":[{"name":"since","text":"v19.9.0"}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":161,"name":"emitter","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"__global.NodeJS.EventEmitter","packageName":"@types/node","typeArguments":[{"kind":"reference","id":null,"name":"DefaultEventMap","packageName":"@types/node","typeArguments":[]}]},{"kind":"reference","id":null,"name":"EventTarget","packageName":"typescript","typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"number"}}]},{"id":151,"name":"listenerCount","source":{"line":283,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":152,"name":"listenerCount","comment":{"description":"A class method that returns the number of listeners for the given `eventName` registered on the given `emitter`.\n\n```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```","blockTags":[{"name":"since","text":"v0.9.12"},{"name":"deprecated","text":"Since v3.2.0 - Use `listenerCount` instead."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":153,"name":"emitter","comment":{"description":"The emitter to query","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"__global.NodeJS.EventEmitter","packageName":"@types/node","typeArguments":[{"kind":"reference","id":null,"name":"DefaultEventMap","packageName":"@types/node","typeArguments":[]}]}},{"id":154,"name":"eventName","comment":{"description":"The event name","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}}],"returnType":{"kind":"intrinsic","type":"number"}}]},{"id":141,"name":"on","source":{"line":261,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":142,"name":"on","comment":{"description":"```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```","blockTags":[{"name":"since","text":"v13.6.0, v12.16.0"},{"name":"returns","text":"An `AsyncIterator` that iterates `eventName` events emitted by the `emitter`"}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":143,"name":"emitter","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"__global.NodeJS.EventEmitter","packageName":"@types/node","typeArguments":[{"kind":"reference","id":null,"name":"DefaultEventMap","packageName":"@types/node","typeArguments":[]}]}},{"id":144,"name":"eventName","comment":{"description":"The name of the event being listened for","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":145,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"StaticEventEmitterOptions","packageName":"@types/node","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"AsyncIterableIterator","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"any"}]}},{"id":146,"name":"on","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":147,"name":"Emitter","constraint":{"kind":"reference","id":null,"name":"EventEmitter","packageName":"@types/node","typeArguments":[]},"default":null},{"id":148,"name":"Events","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":null,"name":"ClientEvents","packageName":"discord.js","typeArguments":[]}},"default":null}],"parameters":[{"id":149,"name":"eventEmitter","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":147,"name":"Emitter","packageName":"discord.js","typeArguments":[]}},{"id":150,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"conditional","checkType":{"kind":"reference","id":147,"name":"Emitter","packageName":"discord.js","typeArguments":[]},"extendsType":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]},"trueType":{"kind":"reference","id":148,"name":"Events","packageName":"discord.js","typeArguments":[]},"falseType":{"kind":"intrinsic","type":"string"}}}],"returnType":{"kind":"reference","id":null,"name":"AsyncIterableIterator","packageName":"typescript","typeArguments":[{"kind":"conditional","checkType":{"kind":"reference","id":147,"name":"Emitter","packageName":"discord.js","typeArguments":[]},"extendsType":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]},"trueType":{"kind":"indexedAccess","objectType":{"kind":"reference","id":null,"name":"ClientEvents","packageName":"discord.js","typeArguments":[]},"indexType":{"kind":"reference","id":148,"name":"Events","packageName":"discord.js","typeArguments":[]}},"falseType":{"kind":"intrinsic","type":"any"}}]}}]},{"id":127,"name":"once","source":{"line":196,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":128,"name":"once","comment":{"description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```\n\nThe special handling of the `'error'` event is only used when `events.once()` is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```","blockTags":[{"name":"since","text":"v11.13.0, v10.16.0"}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":129,"name":"emitter","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"__global.NodeJS.EventEmitter","packageName":"@types/node","typeArguments":[{"kind":"reference","id":null,"name":"DefaultEventMap","packageName":"@types/node","typeArguments":[]}]}},{"id":130,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":131,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"StaticEventEmitterOptions","packageName":"@types/node","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"array","type":{"kind":"intrinsic","type":"any"}}]}},{"id":132,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":133,"name":"emitter","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"EventTarget","packageName":"typescript","typeArguments":[]}},{"id":134,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":135,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"StaticEventEmitterOptions","packageName":"@types/node","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"array","type":{"kind":"intrinsic","type":"any"}}]}},{"id":136,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":137,"name":"Emitter","constraint":{"kind":"reference","id":null,"name":"EventEmitter","packageName":"@types/node","typeArguments":[]},"default":null},{"id":138,"name":"Event","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":null,"name":"ClientEvents","packageName":"discord.js","typeArguments":[]}},"default":null}],"parameters":[{"id":139,"name":"eventEmitter","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":137,"name":"Emitter","packageName":"discord.js","typeArguments":[]}},{"id":140,"name":"eventName","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"conditional","checkType":{"kind":"reference","id":137,"name":"Emitter","packageName":"discord.js","typeArguments":[]},"extendsType":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]},"trueType":{"kind":"reference","id":138,"name":"Event","packageName":"discord.js","typeArguments":[]},"falseType":{"kind":"intrinsic","type":"string"}}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"conditional","checkType":{"kind":"reference","id":137,"name":"Emitter","packageName":"discord.js","typeArguments":[]},"extendsType":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]},"trueType":{"kind":"indexedAccess","objectType":{"kind":"reference","id":null,"name":"ClientEvents","packageName":"discord.js","typeArguments":[]},"indexType":{"kind":"reference","id":138,"name":"Event","packageName":"discord.js","typeArguments":[]}},"falseType":{"kind":"array","type":{"kind":"intrinsic","type":"any"}}}]}}]},{"id":162,"name":"setMaxListeners","source":{"line":355,"file":"events.d.ts","path":"node_modules/@types/node","url":null},"parentId":96,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":163,"name":"setMaxListeners","comment":{"description":"```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```","blockTags":[{"name":"since","text":"v15.4.0"}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":164,"name":"n","comment":{"description":"A non-negative number. The maximum number of listeners per `EventTarget` event.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}},{"id":165,"name":"eventTargets","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"array","type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"__global.NodeJS.EventEmitter","packageName":"@types/node","typeArguments":[{"kind":"reference","id":null,"name":"DefaultEventMap","packageName":"@types/node","typeArguments":[]}]},{"kind":"reference","id":null,"name":"EventTarget","packageName":"typescript","typeArguments":[]}]}}}],"returnType":{"kind":"intrinsic","type":"void"}}]}]}],"enums":[{"id":337,"name":"PackageUpdateType","source":{"line":3,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L3"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"members":[{"id":343,"name":"Build","source":{"line":9,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L9"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":337,"value":"5"},{"id":339,"name":"Major","source":{"line":5,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L5"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":337,"value":"1"},{"id":340,"name":"Minor","source":{"line":6,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L6"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":337,"value":"2"},{"id":338,"name":"None","source":{"line":4,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L4"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":337,"value":"0"},{"id":341,"name":"Patch","source":{"line":7,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":337,"value":"3"},{"id":342,"name":"Prerelease","source":{"line":8,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":337,"value":"4"}]}],"functions":[{"id":293,"name":"existsAsync","source":{"line":9,"file":"fileSystem.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/fileSystem.ts#L9"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":294,"name":"existsAsync","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":295,"name":"file","comment":{"description":"Path to file or directory","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"\"fs\".PathLike","packageName":"@types/node","typeArguments":[]}},{"id":296,"name":"statSymbolicLink","comment":{"description":"If pathname is a symbolic link, then it will check to the linked file","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}}]},{"id":300,"name":"fetchMentionOrId","source":{"line":29,"file":"mentions.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/mentions.ts#L29"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":301,"name":"fetchMentionOrId","comment":{"description":"Fetch user object of a user id or object","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":302,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":305,"name":"FetchMentionOrIdOptions","packageName":"@reciple/utils","typeArguments":[]},{"kind":"literal","value":"guild"}]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"User","packageName":"discord.js","typeArguments":[]}]}},{"id":303,"name":"fetchMentionOrId","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":304,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":305,"name":"FetchMentionOrIdOptions","packageName":"@reciple/utils","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"GuildMember","packageName":"discord.js","typeArguments":[]}]}}]},{"id":310,"name":"getDirModuleType","source":{"line":16,"file":"modules.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/modules.ts#L16"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":311,"name":"getDirModuleType","comment":{"description":"Get module type of a directory","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":312,"name":"dir","comment":{"description":"Path to dir","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":313,"name":"defaultType","comment":{"description":"Default module type if none is detected","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":318,"name":"ModuleType","packageName":"@reciple/utils","typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":318,"name":"ModuleType","packageName":"@reciple/utils","typeArguments":[]}]}}]},{"id":297,"name":"getMentionId","source":{"line":16,"file":"mentions.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/mentions.ts#L16"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":298,"name":"getMentionId","comment":{"description":"Get user id from mention or user object","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":299,"name":"user","comment":{"description":"User resolvable","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"UserResolvable","packageName":"discord.js","typeArguments":[]},{"kind":"reference","id":null,"name":"APIUser","packageName":"discord-api-types","typeArguments":[]},{"kind":"reference","id":null,"name":"APIMessage","packageName":"discord-api-types","typeArguments":[]}]}}],"returnType":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"literal","value":"null"}]}}]},{"id":333,"name":"isValidSnowflake","source":{"line":7,"file":"validators.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/validators.ts#L7"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":334,"name":"isValidSnowflake","comment":{"description":"Check if string is a valid Discord snowflake","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":335,"name":"snowflake","comment":{"description":"a value that could be a snowflake","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"unknown"}}],"returnType":{"kind":"predicate","asserts":false,"name":"snowflake","type":{"kind":"intrinsic","type":"string"}}}]},{"id":314,"name":"recursiveDefaults","source":{"line":31,"file":"modules.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/modules.ts#L31"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":315,"name":"recursiveDefaults","comment":{"description":"Recursively get the default value of a value.","blockTags":[],"modifierTags":[]},"typeParameters":[{"id":316,"name":"T","constraint":null,"default":{"kind":"intrinsic","type":"unknown"}}],"parameters":[{"id":317,"name":"data","comment":{"description":"The value to get the default value of.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":316,"name":"T","packageName":"@reciple/utils","typeArguments":[]},{"kind":"reference","id":319,"name":"RecursiveDefault","packageName":"@reciple/utils","typeArguments":[{"kind":"reference","id":316,"name":"T","packageName":"@reciple/utils","typeArguments":[]}]}]}}],"returnType":{"kind":"union","types":[{"kind":"reference","id":316,"name":"T","packageName":"@reciple/utils","typeArguments":[]},{"kind":"intrinsic","type":"undefined"}]}}]},{"id":326,"name":"replacePlaceholders","source":{"line":22,"file":"resolvers.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/resolvers.ts#L22"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":327,"name":"replacePlaceholders","comment":{"description":"Replace index placeholders in a string.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":328,"name":"message","comment":{"description":"The string that contains the placeholders.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":329,"name":"placeholders","comment":{"description":"An array of strings that represent the placeholders.","blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":null,"name":"RestOrArray","packageName":"fallout-utility","typeArguments":[{"kind":"intrinsic","type":"string"}]}}],"returnType":{"kind":"intrinsic","type":"string"}}]},{"id":322,"name":"resolveEnvProtocol","source":{"line":9,"file":"resolvers.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/resolvers.ts#L9"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":323,"name":"resolveEnvProtocol","comment":{"description":"Resolve env from string","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":324,"name":"str","comment":{"description":"env resolvable string","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":325,"name":"envOptions","comment":{"description":"dotenv options","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"DotenvConfigOptions","packageName":"dotenv","typeArguments":[]}}],"returnType":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"literal","value":"null"}]}}]},{"id":330,"name":"resolvePackageManager","source":{"line":35,"file":"resolvers.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/resolvers.ts#L35"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":331,"name":"resolvePackageManager","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"union","types":[{"kind":"reference","id":332,"name":"PackageManager","packageName":"@reciple/utils","typeArguments":[]},{"kind":"literal","value":"null"}]}}]},{"id":1,"name":"sliceIntoChunks","source":{"line":18,"file":"objects.d.ts","path":"node_modules/fallout-utility/dist/scripts","url":null},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":true,"signatures":[{"id":2,"name":"sliceIntoChunks","comment":{"description":"Slice array values into chunks","blockTags":[],"modifierTags":[]},"typeParameters":[{"id":3,"name":"T","constraint":null,"default":null}],"parameters":[{"id":4,"name":"arr","comment":{"description":"Array to slice","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"array","type":{"kind":"reference","id":3,"name":"T","packageName":"fallout-utility","typeArguments":[]}}},{"id":5,"name":"chunkSize","comment":{"description":"Chunk size","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"number"}}],"returnType":{"kind":"array","type":{"kind":"array","type":{"kind":"reference","id":3,"name":"T","packageName":"fallout-utility","typeArguments":[]}}}}]}],"interfaces":[{"id":305,"name":"FetchMentionOrIdOptions","source":{"line":5,"file":"mentions.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/mentions.ts#L5"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":306,"name":"client","source":{"line":6,"file":"mentions.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/mentions.ts#L6"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":305,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Client","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}},{"id":309,"name":"force","source":{"line":9,"file":"mentions.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/mentions.ts#L9"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":305,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":308,"name":"guild","source":{"line":8,"file":"mentions.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/mentions.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":305,"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"GuildResolvable","packageName":"discord.js","typeArguments":[]}},{"id":307,"name":"user","source":{"line":7,"file":"mentions.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/mentions.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":305,"readonly":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"UserResolvable","packageName":"discord.js","typeArguments":[]},{"kind":"reference","id":null,"name":"APIUser","packageName":"discord-api-types","typeArguments":[]},{"kind":"reference","id":null,"name":"APIMessage","packageName":"discord-api-types","typeArguments":[]}]}}],"methods":[]},{"id":81,"name":"PackageUpdateCheckerEvents","source":{"line":13,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L13"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":82,"name":"updateAvailable","source":{"line":14,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L14"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":81,"readonly":false,"optional":false,"type":{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"data","type":{"kind":"reference","id":84,"name":"PackageUpdateCheckerUpdateData","packageName":"@reciple/utils","typeArguments":[]},"optional":false}]}},{"id":83,"name":"updateError","source":{"line":15,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L15"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":81,"readonly":false,"optional":false,"type":{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"pkg","type":{"kind":"intrinsic","type":"string"},"optional":false},{"kind":"namedTupleMember","name":"error","type":{"kind":"intrinsic","type":"unknown"},"optional":false}]}}],"methods":[]},{"id":75,"name":"PackageUpdateCheckerOptions","source":{"line":8,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L8"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":76,"name":"packages","source":{"line":9,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L9"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":75,"readonly":false,"optional":false,"type":{"kind":"array","type":{"kind":"reflection","properties":[{"id":79,"name":"currentVersion","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":78,"name":"package","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"signatures":null,"methods":null}}},{"id":80,"name":"updatecheckIntervalMs","source":{"line":10,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L10"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":75,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"methods":[]},{"id":84,"name":"PackageUpdateCheckerUpdateData","source":{"line":18,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L18"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":93,"name":"currentVersion","source":{"line":34,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L34"},"comment":{"description":"This property is a string that represents the current version of the package before the update.","blockTags":[],"modifierTags":[]},"parentId":84,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":86,"name":"data","source":{"line":26,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L26"},"comment":{"description":"Package metadata from the registry","blockTags":[],"modifierTags":[]},"parentId":84,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reflection","properties":[{"id":90,"name":"dist-tags","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"DistTags","packageName":"package-json","typeArguments":[]}},{"id":89,"name":"modified","comment":{"description":"An {@link ISO timestamp} of the last time the package was modified.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":88,"name":"name","comment":{"description":"The name of the package.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":91,"name":"versions","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Record","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"AbbreviatedVersion","packageName":"package-json","typeArguments":[]}]}}],"signatures":null,"methods":null}]}},{"id":95,"name":"latestVersion","source":{"line":42,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L42"},"comment":{"description":"This property is a string that represents the latest available version of the package at the time of the update check.","blockTags":[],"modifierTags":[]},"parentId":84,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":85,"name":"package","source":{"line":22,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L22"},"comment":{"description":"A string representing the name of the package.","blockTags":[],"modifierTags":[]},"parentId":84,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":92,"name":"updateType","source":{"line":30,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L30"},"comment":{"description":"It could be major, minor, or patch, which typically represent changes to the package that are incompatible, backward-compatible, or fully backward-compatible with the previous version, respectively.","blockTags":[],"modifierTags":[]},"parentId":84,"readonly":false,"optional":false,"type":{"kind":"reference","id":337,"name":"PackageUpdateType","packageName":"@reciple/utils","typeArguments":[]}},{"id":94,"name":"updatedVersion","source":{"line":38,"file":"PackageUpdateChecker.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/PackageUpdateChecker.ts#L38"},"comment":{"description":"This property is also a string that represents the version of the package after it has been updated.","blockTags":[],"modifierTags":[]},"parentId":84,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"methods":[]},{"id":18,"name":"ParseMessageURLData","source":{"line":6,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L6"},"namespaceParentId":null,"comment":{"description":"Message URL parse data","blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":20,"name":"channelId","source":{"line":8,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":18,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":19,"name":"guildId","source":{"line":7,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":18,"readonly":false,"optional":false,"type":{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"string"}]}},{"id":21,"name":"messageId","source":{"line":9,"file":"MessageURLData.ts","path":"packages/utils/src/classes","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/classes/MessageURLData.ts#L9"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":18,"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"methods":[]},{"id":319,"name":"RecursiveDefault","source":{"line":7,"file":"modules.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/modules.ts#L7"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[{"id":321,"name":"T","constraint":null,"default":{"kind":"intrinsic","type":"unknown"}}],"properties":[{"id":320,"name":"default","source":{"line":8,"file":"modules.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/modules.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":319,"readonly":false,"optional":true,"type":{"kind":"union","types":[{"kind":"reference","id":319,"name":"RecursiveDefault","packageName":"@reciple/utils","typeArguments":[{"kind":"reference","id":321,"name":"RecursiveDefault.T","packageName":"@reciple/utils","typeArguments":[]}]},{"kind":"reference","id":321,"name":"RecursiveDefault.T","packageName":"@reciple/utils","typeArguments":[]}]}}],"methods":[]}],"namespaces":[],"typeAliases":[{"id":275,"name":"AbbreviatedMetadata","source":{"line":114,"file":"index.d.ts","path":"node_modules/package-json","url":null},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":true,"typeParameters":[],"type":{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reflection","properties":[{"id":279,"name":"dist-tags","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"DistTags","packageName":"package-json","typeArguments":[]}},{"id":278,"name":"modified","comment":{"description":"An {@link ISO timestamp} of the last time the package was modified.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":277,"name":"name","comment":{"description":"The name of the package.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":280,"name":"versions","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Record","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"AbbreviatedVersion","packageName":"package-json","typeArguments":[]}]}}],"signatures":null,"methods":null}]}},{"id":281,"name":"FullMetadata","source":{"line":192,"file":"index.d.ts","path":"node_modules/package-json","url":null},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":true,"typeParameters":[],"type":{"kind":"intersection","types":[{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reflection","properties":[{"id":283,"name":"_id","comment":{"description":"The name of the package, used as an ID in CouchDB.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":284,"name":"_rev","comment":{"description":"The revision number of this version of the document in CouchDB.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":285,"name":"time","comment":{"description":"A mapping of versions to the time they were published. Each value is an {@link ISO timestamp}.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":287,"name":"created","comment":{"description":"When the package was created.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":288,"name":"modified","comment":{"description":"When the package was last modified.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"signatures":null,"methods":null}},{"id":291,"name":"users","comment":{"description":"NPM users who have starred the package.","blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"Record","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"boolean"}]}]}},{"id":292,"name":"versions","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Readonly","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"Record","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"FullVersion","packageName":"package-json","typeArguments":[]}]}]}}],"signatures":null,"methods":null}]},{"kind":"reference","id":275,"name":"AbbreviatedMetadata","packageName":"package-json","typeArguments":[]},{"kind":"reference","id":null,"name":"HoistedData","packageName":"package-json","typeArguments":[]}]}},{"id":318,"name":"ModuleType","source":{"line":6,"file":"modules.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/modules.ts#L6"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"type":{"kind":"union","types":[{"kind":"literal","value":"module"},{"kind":"literal","value":"commonjs"}]}},{"id":332,"name":"PackageManager","source":{"line":33,"file":"resolvers.ts","path":"packages/utils/src/helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/helpers/resolvers.ts#L33"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"type":{"kind":"union","types":[{"kind":"literal","value":"npm"},{"kind":"literal","value":"yarn"},{"kind":"literal","value":"pnpm"},{"kind":"literal","value":"bun"}]}}],"variables":[{"id":336,"name":"semverRegex","source":{"line":1,"file":"constants.ts","path":"packages/utils/src","url":"https://github.com/thenorthsolution/Reciple/blob/c2cfe308a3a3b03d191fbc5723f88fb0c295e512/packages/utils/src/constants.ts#L1"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"type":{"kind":"reference","id":null,"name":"RegExp","packageName":"typescript","typeArguments":[]},"value":"..."}],"customPages":[],"parsedAt":1717991952593}